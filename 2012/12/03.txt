[IRC logfile - Started Mon Dec  3 00:17:07 2012]
[00:17:07] xtian_ has joined #selenium
[00:22:05] detronizator: jarib: u there?
[00:23:52] jarib: detronizator: yes
[00:23:57] detronizator: hey
[00:24:03] detronizator: I saw your issues
[00:24:21] jarib: ok?
[00:24:36] detronizator: did you raise one for the multiple-arguments async script?
[00:26:59] jarib: detronizator: on further investigation it led me to detro/ghostdriver#126
[00:27:00] selbot2: 03jarib open Crash on get + execute_async_script - https://github.com/detro/ghostdriver/issues/126 [1.1 bug phantomjs-related]
[00:27:08] detronizator: ah ok
[00:27:14] detronizator: cool
[00:28:55] jarib: feel free to close the ones that are upstream bugs btw
[00:29:06] jarib: (ideally with a link to the upstream bug report though)
[00:29:28] DaveIngram has joined #selenium
[00:29:41] jarib: unless you like to keep track of them under ghostdriver as well
[00:31:17] detronizator: the annoying thing is that some of those are reproducible only via something as complex as ghostdriver
[00:32:14] detronizator: vast majority of phantomjs usages never involve as much code as Ghostdriver, hence, until I can reproduce externally and consistently, those issues have to live in ghostdriver
[00:32:49] detronizator: some I was aware of, but I think I like to have all of them listed, and you have cleanly reported the issue.
[00:33:12] detronizator: something I appreciate (lots of issues are usually "it doesn't work - fix it!" kind of reports)
[00:36:09] jarib: oh, i've been on the receiving end of that too many times 
[00:36:21] jarib: anyway, bedtime here. ttyl
[00:44:23] plightbo has joined #selenium
[00:49:47] towski has joined #selenium
[00:59:58] alexglow has joined #selenium
[IRC logfile - Started Mon Dec  3 01:00:10 2012]
[01:00:10] DaveIngram has joined #selenium
[01:15:10] plightbo has joined #selenium
[01:17:50] plightb__ has joined #selenium
[01:46:00] plightbo has joined #selenium
[IRC logfile - Started Mon Dec  3 02:01:48 2012]
[02:01:48] diminoten has joined #selenium
[02:10:18] diminoten has joined #selenium
[02:22:41] gabrielrotbart has joined #selenium
[02:34:45] admc has joined #selenium
[02:46:17] nirvdrum has joined #selenium
[02:47:11] Nari118 has joined #selenium
[02:59:10] Nari119 has joined #selenium
[IRC logfile - Started Mon Dec  3 03:05:42 2012]
[03:05:42] plightbo has joined #selenium
[03:12:06] plightbo has joined #selenium
[03:19:26] Nari119 has joined #selenium
[03:52:25] plightbo has joined #selenium
[IRC logfile - Started Mon Dec  3 04:25:52 2012]
[04:25:52] gabrielrotbart has joined #selenium
[04:26:24] plightbo has joined #selenium
[04:30:15] plightbo_ has joined #selenium
[04:31:41] p0deje has joined #selenium
[04:31:52] alexglow has joined #selenium
[04:43:02] girija has joined #selenium
[04:49:54] plightbo has joined #selenium
[04:50:26] plightbo_ has joined #selenium
[IRC logfile - Started Mon Dec  3 05:05:44 2012]
[05:05:44] richardshaw has joined #selenium
[05:28:08] plightbo has joined #selenium
[05:38:11] admc has joined #selenium
[05:41:22] kallisti has joined #selenium
[05:41:22] kallisti has joined #selenium
[IRC logfile - Started Mon Dec  3 06:01:21 2012]
[06:01:21] Ajay_ has joined #selenium
[06:01:34] Ajay_: :seen krosenvold
[06:01:35] selbot2: krosenvold was last seen 3 days ago, joining.
[06:01:44] girija has left #selenium
[06:05:08] plightbo_ has joined #selenium
[06:05:17] kallisti has joined #selenium
[06:05:17] kallisti has joined #selenium
[06:13:18] rananda has joined #selenium
[06:20:39] Osleg has joined #selenium
[06:22:51] plightbo_ has joined #selenium
[06:27:59] SamuraiJack has joined #selenium
[06:30:48] towski has joined #selenium
[06:59:02] alexglow has joined #selenium
[IRC logfile - Started Mon Dec  3 07:02:35 2012]
[07:02:35] p0deje has joined #selenium
[07:03:53] papegaaij has joined #selenium
[07:20:21] plightbo has joined #selenium
[07:23:36] papegaaij has joined #selenium
[07:58:18] rbalent has joined #selenium
[IRC logfile - Started Mon Dec  3 08:07:39 2012]
[08:07:39] zeljkof has joined #selenium
[08:12:54] Ardesco has joined #selenium
[08:19:02] plightbo has joined #selenium
[08:19:04] Hronom has joined #selenium
[08:20:40] plightbo_ has joined #selenium
[08:26:51] jlopez_ has joined #selenium
[08:32:41] testingb0t has joined #selenium
[08:35:26] rbalent has joined #selenium
[08:35:27] rbalent has joined #selenium
[08:35:46] slex has joined #selenium
[08:37:00] jlopez has joined #selenium
[08:45:41] pa has joined #selenium
[08:48:20] stan has joined #selenium
[08:48:56] zac_sel has joined #selenium
[08:57:20] ali_ has joined #selenium
[08:58:29] stackedsax has joined #selenium
[08:58:34] ArSn has joined #selenium
[08:59:04] ali_: Hi all, can anyone point me to the documentation for page loading strategies?
[IRC logfile - Started Mon Dec  3 09:03:31 2012]
[09:03:31] Bebe_sel has joined #selenium
[09:04:08] jeichar has joined #selenium
[09:07:13] freynaud has joined #selenium
[09:14:08] sburjan has joined #selenium
[09:21:42] Ardesco: ali_: are you looking for explicit waits?
[09:21:43] Ardesco: http://seleniumhq.org/docs/04_webdriver_advanced.html#explicit-and-implicit-waits
[09:25:14] rbalent has joined #selenium
[09:25:33] ali_: Ardesco thank for reply
[09:25:38] ali_: I was looking for 
[09:25:44] ali_:    FirefoxProfile fp = new FirefoxProfile();
[09:25:46] ali_:    fp.setPreference("webdriver.load.strategy", "unstable"); // As of 2.19. from 2.9 - 2.18 use 'fast'
[09:25:47] ali_:    WebDriver driver = new FirefoxDriver(fp);
[09:26:13] ali_: it seems like ebdriver.load.strategy
[09:26:34] Bebe_sel has joined #selenium
[09:26:41] ali_: I can not find docs for ebdriver.load.strategy
[09:28:03] ali_: is it still in Beta??
[09:30:06] Ardesco: sounds like http://code.google.com/p/selenium/wiki/DesiredCapabilities
[09:30:30] Ardesco: no idea what the current state of it is
[09:30:34] Ardesco: it's firefox only though
[09:34:36] ali_: Thanks, For now we are testing on firefox only. it seems noone can get IE to work reliably
[09:36:24] teodosia_sel has joined #selenium
[09:51:49] jamesoram has joined #selenium
[09:51:53] kaawee has joined #selenium
[09:56:12] mandark has joined #selenium
[09:56:52] mandark: Hi there, any idea how to diagnose why selenium.webdriver.remote.webelement.text contains latin-1 data as my page AND my script are using utf8 ? I didn't found any documentation on the subject )-:
[IRC logfile - Started Mon Dec  3 10:02:32 2012]
[10:02:32] Hronom has joined #selenium
[10:03:30] jamesoram has joined #selenium
[10:11:29] jamesoram has joined #selenium
[10:15:02] jamesoram has joined #selenium
[10:19:05] davehunt has joined #selenium
[10:19:19] james_o has joined #selenium
[10:21:20] AutomatedTester has joined #selenium
[10:21:58] mandark has left #selenium
[10:23:29] plightbo has joined #selenium
[10:25:39] AutomatedTester: barancev: yo. whats the state of play for 2.27 in your eyes?
[10:26:27] xeranas has joined #selenium
[10:27:40] jamesoram has joined #selenium
[10:30:50] james_o has joined #selenium
[10:35:18] dawagner has joined #selenium
[10:35:19] selbot2: dawagner: note from lukeis 2 days ago: failed? http://ci.seleniumhq.org:8080/job/SeleniumHQ/13/ did the version of maven somehow change? :-/ 
[10:35:24] jamesoram has joined #selenium
[10:36:03] AutomatedTester: dawagner: you able to help today with finishing off 2.27?
[10:38:11] dawagner: #4802
[10:38:12] selbot2: 03 open/accepted IEDriverServer 2.26.1-2.26.2 cannot findElement using By.xpath attribute selector - https://code.google.com/p/selenium/issues/detail?id=4802 [Type-Defect Priority-Medium]
[10:38:48] dawagner: AutomatedTester: I'm looking at that issue now, what else would you like a hand with?
[10:39:09] AutomatedTester: dawagner: I guess it more help running tests
[10:39:20] AutomatedTester: and possibly picking up issues as you see them
[10:39:51] AutomatedTester: dawagner: move go ok?
[10:41:13] dawagner: :note lukeis possibly? mvn --version > Apache Maven 2.2.1 (rdebian-8)
[10:41:14] selbot2: ok!
[10:41:27] dawagner: Not too bad thanks :) Now I just have the giant piles of boxes to deal with? Ugh :(
[10:41:36] AutomatedTester: I know that feeling
[10:41:50] *AutomatedTester is glad he wont be moving any time soon
[10:42:01] dawagner: Looking forward to actually owning a place and just settling there at some point :)
[10:42:15] AutomatedTester: jarib: I can't register a group :( http://freenode.net/group_registration.shtml
[10:43:40] AutomatedTester has joined #selenium
[10:44:28] AutomatedTester: dawagner: Simon might be selling his in a years time
[10:47:21] jamesoram has joined #selenium
[10:48:47] samphippen has joined #selenium
[10:51:36] AutomatedTester: oh joy support tests are failing
[10:52:28] AutomatedTester: dawagner: is eran about today?
[10:53:48] dawagner: He is!
[10:54:33] AutomatedTester: can you ask if he is happy me reverting his native events code for Gecko 2 and 10
[10:54:38] AutomatedTester: or does he want to fix?
[10:56:00] stan has joined #selenium
[10:57:28] eranm has joined #selenium
[10:57:28] selbot2: eranm: note from barancev 5 days ago: firefox-driver still cannot be compiled on windows: https://gist.github.com/4153958 
[10:57:38] eranm: AutomatedTester, what seems to be the problem?
[10:57:56] AutomatedTester: eranm: apparently things arent working on Gecko 2 and 10
[10:58:10] AutomatedTester: I dont care about 2 since its such and old version of Firefox
[10:58:30] AutomatedTester: but it will break Google's infrastructure
[10:58:30] eranm: What's not working on 10? I tested my changes with Firefox 10
[10:59:34] AutomatedTester: apparently the regenerated headers dont work with 10
[10:59:45] AutomatedTester: from our tree
[IRC logfile - Started Mon Dec  3 11:00:21 2012]
[11:00:21] dawagner: :note jimevans I can't reproduce #4802 - the page linked to is missing, but a page with just <!DOCTYPE html><div class="bug"></div> works fine for me at revision 18101, for a 32-bit debug build, win7, ie9.
[11:00:22] selbot2: ok!
[11:00:23] selbot2: 03 open/accepted IEDriverServer 2.26.1-2.26.2 cannot findElement using By.xpath attribute selector - https://code.google.com/p/selenium/issues/detail?id=4802 [Type-Defect Priority-Medium]
[11:00:24] eranm: Interesting
[11:01:20] eranm: AutomatedTester, are you saying that building the native events component with Gecko 10 will fail?
[11:01:32] AutomatedTester: thats what barancev said
[11:01:43] *AutomatedTester is getting a new tree now on to his linux box
[11:02:32] eranm: Thats odd. I'm pretty sure it compiled on old versions, I'll check now.
[11:02:42] eranm: On Linux, anyway.
[11:03:43] eranm: I do have a note from him saying it doesn't compile for Windows
[11:04:17] AutomatedTester: 10 is still supported for ESR till mid February from my understanding
[11:07:59] eranm: AutomatedTester, compiles on my machine: https://gist.github.com/4194305
[11:08:15] eranm: You'll notice there's no "Falling back to ..." for any of the linux libraries.
[11:08:15] AutomatedTester: hmm
[11:08:19] AutomatedTester: yea
[11:08:26] eranm: On Windows I still have to investigate
[11:08:29] AutomatedTester: can you check for Gecko 2 as well please?
[11:09:28] eranm: AutomatedTester, Gecko 2 == Firefox 4, right?
[11:09:46] AutomatedTester: lemme check
[11:09:52] AutomatedTester: I thought it was 3.6
[11:09:57] AutomatedTester: but if its 4 then I dont care
[11:10:25] eranm: No, it's 4 AFAIK
[11:10:39] AutomatedTester: then I dont care :)
[11:10:41] eranm: We compile the native events component for Firefox 3.6 with Gecko 1.9.2
[11:10:49] eranm: Except on Windows, hmm.
[11:10:58] AutomatedTester: and it works 3.6?
[11:11:09] eranm: On Windows we do compile with gecko-2
[11:11:22] eranm: AutomatedTester, let me verify.
[11:11:44] eranm: AutomatedTester, I cared less about Firefox 3.6 because if we can't compile the new code for Firefox 3.6 it means we'll always use the prebuilt binary.
[11:11:58] eranm: The meaning is that changes to the native events code will not be applied to Firefox 3.6.
[11:12:16] eranm: And since most users of Firefox 3.6 I know of don't care about native events on Linux, I didn't test.
[11:12:31] AutomatedTester: eranm: fair enough
[11:12:45] AutomatedTester: I dont care about 3.6 since its not supported by Mozilla
[11:13:10] AutomatedTester: I was only caring for you guys
[11:14:38] eranm: I can add an ugly hack where I fold two generated files for old gecko and new gecko with an #ifdef selector.
[11:14:57] eranm: But that's ugly and really provides no benefit.
[11:15:14] AutomatedTester: eranm: you dont need to convince me to not support it ;)
[11:16:53] eranm: right
[11:16:53] eranm: btw
[11:17:28] eranm: I've noticed Firefox17-esr in ftp.mozilla.org. Is 17 going to be the next esr?
[11:18:05] dawagner: eranm: Yep
[11:18:16] AutomatedTester: eranm: yes
[11:18:24] AutomatedTester: then 24
[11:19:05] AutomatedTester: whats the magic to get the java tests to run from intellij?
[11:19:30] andreastt: AutomatedTester: Set up a run configuration for the test class.
[11:19:38] eranm: AutomatedTester, it should "just work"
[11:19:56] AutomatedTester: eranm: thats what I tought
[11:20:08] AutomatedTester: andreastt: how do I set it up?
[11:20:46] andreastt: AutomatedTester: There's a drop down in the main bar, click that and there should be an option to “Edit configurations”.
[11:21:54] AutomatedTester: ok, and what do I add?
[11:23:28] AutomatedTester: actually its suggesting my classpath is broken
[11:23:43] andreastt: You add a JUnit config.
[11:23:57] andreastt: You want to use the classpath of the client module.
[11:24:10] andreastt: Then you set the class field to the class you want to run.
[11:24:36] AutomatedTester: ok...
[11:24:39] AutomatedTester: then?
[11:31:24] jimevans has joined #selenium
[11:31:25] selbot2: jimevans: note from dawagner 31 minutes ago: I can't reproduce #4802 - the page linked to is missing, but a page with just <!DOCTYPE html><div class="bug"></div> works fine for me at revision 18101, for a 32-bit debug build, win7, ie9. 
[11:32:57] jimevans: dawagner: In what sense does it "work"? Using what components?
[11:34:12] jimevans: To repro the issue at that revision, you need to rebuild the IEDriverServer.exe to see the issue. 
[11:34:59] dawagner: I did
[11:35:20] dawagner: A 32-bit debug build, from clean trunk @r18101, from inside Visual Studio
[11:35:23] selbot2: 03dawagner 24 days ago - DanielWagnerHall on behalf of SeveralGooglers: Pushing out a bunch of Google javascript changes | https://code.google.com/p/selenium/source/detail?r=18101 | http://seleniumhq.org/ci.jsp?r=18101
[11:35:55] jimevans: Did you regenerate atoms.h before building in VS?
[11:36:06] andreastt: AutomatedTester: Then you select your config and hit Shift+F10 to run it.
[11:36:20] dawagner: No, how do I do that?
[11:36:46] jimevans: "go //cpp:atoms"
[11:37:44] dawagner: will do
[11:37:51] jimevans: Groovy. 
[11:38:19] AutomatedTester: jimevans: is IE good to go?
[11:39:07] jimevans: Incidentally, the target for generating the exe from the command line is //cpp:ie_win32_exe. 
[11:40:09] jimevans: AutomatedTester: I'd really like to try to get #4802 fixed before releasing, but I could do that out-of-band. 
[11:40:10] selbot2: 03 open/accepted IEDriverServer 2.26.1-2.26.2 cannot findElement using By.xpath attribute selector - https://code.google.com/p/selenium/issues/detail?id=4802 [Type-Defect Priority-Medium]
[11:40:53] jimevans: That's what dawagner is looking into right now. 
[11:41:10] AutomatedTester: jimevans: thats fine
[11:41:18] jimevans: Other than that, no blockers for IE. 
[11:41:20] AutomatedTester: other than that we are good to go?
[11:41:22] AutomatedTester: woop
[11:41:26] AutomatedTester: lets keep it that way
[11:41:43] *AutomatedTester tries to figure out this executeScript code in FirefoxDriver
[11:42:10] AutomatedTester: TIL: Marionette has special privledge to get pushed into the Beta branch
[11:42:29] jimevans: Copy that. I'm keeping the IEDriverServer code frozen modulo bug fix for #4802
[11:42:31] selbot2: 03 open/accepted IEDriverServer 2.26.1-2.26.2 cannot findElement using By.xpath attribute selector - https://code.google.com/p/selenium/issues/detail?id=4802 [Type-Defect Priority-Medium]
[11:43:08] jimevans: Oh my. That's awesome. 
[11:43:27] AutomatedTester: so everything I, and my team do, is in Firefox 18
[11:43:38] jimevans: Sweet!
[11:44:13] jimevans: The Marionette protocol hasn't changed yet has it?
[11:44:19] AutomatedTester: no :(
[11:44:56] AutomatedTester: Firefox OS takes priority atm over w3c stuff
[11:44:59] jimevans: Well I'll be on the lookout for those changes then. 
[11:45:01] AutomatedTester: for Marionette
[11:45:22] AutomatedTester: since its working just not correct
[11:45:48] samphippen has joined #selenium
[11:46:23] jimevans: Then again, I suppose I could munge the JSON with a big honkin' todo for when the protocol is corrected. 
[11:46:39] AutomatedTester: yup
[11:47:08] dawagner: jimevans: Still can't reproduce
[11:47:22] *jimevans will spend some time playing around with that.
[11:48:23] jimevans: dawagner: I'm mobile at the moment. I'll be in the office in a couple of hours and can look at my repro scenario when I arrive there. 
[11:49:27] jimevans: Right. Bbiaw
[11:49:35] jimevans has left #selenium
[11:49:57] dawagner: Ok that's weird.  I can reproduce on some hostnames but not others.
[11:49:59] dawagner: I'll investigate.
[11:53:01] adamgoucher has joined #selenium
[11:54:33] dawagner: Have to head out for a couple of hours, I'll keep investigating when I'm back
[11:57:36] adamgoucher: AutomatedTester: i think we're already registered as a group (which is how we got 'ownership' of #selenium)
[IRC logfile - Started Mon Dec  3 12:00:57 2012]
[12:00:57] caddoo has joined #selenium
[12:02:21] zeljkof has joined #selenium
[12:07:42] nirvdrum has joined #selenium
[12:18:04] ebi has joined #selenium
[12:18:40] ebi: Is there a good way to check if an element is focused? I tried to select ':focus' but this doesn't seem to work in all browsers
[12:28:18] RossPatterson has joined #selenium
[12:28:18] ChanServ has altered RossPatterson's mode: +o
[12:32:02] dawagner: ebi: element.equals(driver.switchTo().activeElement())
[12:32:28] aweiteka has joined #selenium
[12:32:55] ebi: dawagner: Thanks :)
[12:34:02] knorrium has joined #selenium
[12:55:02] DaveIngram has joined #selenium
[IRC logfile - Started Mon Dec  3 13:04:48 2012]
[13:04:48] anka has joined #selenium
[13:05:00] anka: hello
[13:07:37] AutomatedTester: adamgoucher: ok, so how do we add people to the cloak?
[13:10:05] adamgoucher: dunno. i'll add it to the list of things i need to track down
[13:10:25] adamgoucher: i dont think its something a bot can do
[13:10:43] AutomatedTester: adamgoucher: I can go ask in #freenode
[13:10:52] anka: i followed selenium documentation, set up project in java with mvn, now in eclipse i want to run the example, but i dont know where to put it in... there is no src folder (screenshot http://snag.gy/WmR0o.jpg ), where to put selenium code? when i create class anywhere in these folders i get "editor does not contain a main type", and when adding class i see warning " Source folder is not on the Java build class path."...
[13:10:52] AutomatedTester: thats how I got a cloak for my account
[13:14:35] AutomatedTester: anka: have you any experience with Java?
[13:15:12] anka: little
[13:15:22] anka: basic of basic :P
[13:16:50] AutomatedTester: so what you want to do is create a new project and then add the selenium client code to your classpath
[13:17:06] AutomatedTester: and then make sure you import it in your java code and then should be able to go
[13:17:20] *AutomatedTester thinks we should remove the maven part from setting up
[13:17:26] anka: i dont need this whole mvn project stuff
[13:17:40] anka: ok I'll try it, thanks AutomatedTester 
[13:17:48] ner0x has joined #selenium
[13:17:59] samphippen has joined #selenium
[13:17:59] AutomatedTester: adamgoucher: do you want me to ask in #freenode
[13:18:36] l3dx has joined #selenium
[13:20:53] l3dx: I'm having trouble with a test which fails on the CI server, while there are no problems when running it locally. The CI server runs the test in a headless env, so it's quite hard to debug/troubleshoot. any ideas?
[13:22:20] jamesoram has joined #selenium
[13:22:21] l3dx: to be specific, the test hangs forever while waiting for an element not to be found
[13:22:45] AutomatedTester: l3dx: is your test using Fx17?
[13:22:49] l3dx: yes
[13:22:56] l3dx: know issue?
[13:22:59] AutomatedTester: yea
[13:23:04] l3dx: great news
[13:23:06] l3dx: kind of
[13:23:09] AutomatedTester: I am working on getting a new release out
[13:23:12] AutomatedTester: we have it fixed
[13:23:35] l3dx: is there a bug report I can read?
[13:23:47] *AutomatedTester tries to remember the number
[13:23:50] l3dx: :)
[13:23:51] AutomatedTester: #4813
[13:23:52] selbot2: 03 closed/duplicate Firefox 17 - driver.findElement hangs instead of throwing NosuchElementException - https://code.google.com/p/selenium/issues/detail?id=4813 [Type-Defect Priority-Medium Browser-Firefox] (duplicate of https://code.google.com/p/selenium/issues/detail?id=4814)
[13:23:58] AutomatedTester: woop!
[13:24:10] AutomatedTester: and #4814
[13:24:11] selbot2: 03 closed/fixed WebDriver element.click() randomly hangs on Firefox 17 but not 15 or 4 - https://code.google.com/p/selenium/issues/detail?id=4814 [Type-Defect Priority-Medium Browser-Firefox]
[13:24:12] l3dx: thansk a lot :)
[13:24:31] AutomatedTester: recommendation for now is downgrade firefox 16 till 2.27 is out
[13:24:36] l3dx: will do
[13:24:36] adamgoucher: oh extjs, how i love you. '//div[@id="findOrderGrid"]//div[contains(@class, "x-grid3-row")]//td[contains(@class, "x-grid3-cell-first")]/div[text()="416-371-4383"]'
[13:24:52] l3dx: thanks again, AutomatedTester!
[13:24:56] AutomatedTester: l3dx: anytime
[13:25:05] RossPatterson: extjs is the tool of the devil.
[13:25:06] AutomatedTester: l3dx: hope to have a new release this week
[13:29:30] l3dx: cool
[13:33:52] l3dx: erhm..is there an easy way to downgrade firefox on ubuntu?
[13:34:58] AutomatedTester: um not sure
[13:35:17] AutomatedTester: dawagner: Google AppEngine installer doesnt work from the dmg on OSX
[13:36:10] mreedell has joined #selenium
[13:36:11] AutomatedTester: and then crashes
[13:43:17] davehunt has joined #selenium
[13:44:22] Ardesco: anka if you want to go the maven route
[13:44:42] Ardesco: https://github.com/Ardesco/Selenium-Maven-Template will get you started
[13:45:20] anka: thx Ardesco, i cant find a way to make a simple script run -.- now i tried exporting from IDE and still no success, what a fail :p
[13:45:23] Ardesco: maven has a directory structure you need to adhere to (unless you configure it to be different in your POM file which is not something you want to do when just learning maven)
[13:45:38] Ardesco: the template above has a simple script included
[13:46:14] anka: ok :)
[13:47:27] nacho has joined #selenium
[13:48:59] Ardesco: adamgoucher: sure you don't want: //div[@id="findOrderGrid"]/descendant::div[contains(@class, "x-grid3-row")]/descendant::td[contains(@class, "x-grid3-cell-first")]/div[text()="416-371-4383"]
[13:49:01] Ardesco: :)
[13:49:21] adamgoucher: nope. mine works :)
[13:51:26] Ajay__ has joined #selenium
[13:52:08] Ajay__: :seen krosenvold
[13:52:09] selbot2: krosenvold was last seen 3 days ago, joining.
[13:52:35] rananda has joined #selenium
[13:52:47] anka: Ardesco: It worked! big thanks! :)
[13:56:11] cmcgraw has joined #selenium
[IRC logfile - Started Mon Dec  3 14:02:24 2012]
[14:02:24] AutomatedTester: is it me or are our linux tests taking a while to run?
[14:03:40] Ardesco: np :)
[14:04:18] Ardesco: adamgoucher: in that case wouldn't this just work then?  //td[contains(@class, "x-grid3-cell-first")]/div[text()="416-371-4383"]'
[14:04:32] anka: I even fixed the issue i got previously, ill send a tip to documentation makers so everyone can deal with it :P
[14:05:11] adamgoucher: Ardesco: well, actually, i didnt work needed some slight tweaks… stoopid extjs
[14:05:21] Ardesco: heh
[14:06:48] cmcgraw has joined #selenium
[14:16:09] Ardesco: anybody done anything with VML?
[14:16:24] AutomatedTester: svg?
[14:16:33] Ardesco: having problems finding out the colour assigned to a bar on a chart
[14:16:40] Ardesco: nope VML, IE8
[14:16:46] Ardesco: (doesn't support SVG)
[14:16:53] AutomatedTester: no idea
[14:16:56] Ardesco: SVG stuff works
[14:17:07] Ardesco: I just can't work out where colours are being assigned in the VML markup
[14:17:35] Ardesco: none of the colour attributes seem to be set when querying in debug console either
[14:17:38] Ardesco: stupid VML
[14:17:45] Ardesco: (or stupid me not getting VML)
[14:18:16] *Ardesco now has 3 candidates to punch in the face: Safari, IE and VML
[14:20:20] jimevans has joined #selenium
[14:21:47] samphippen has joined #selenium
[14:25:53] jimevans: dawagner: redoing my analysis on #4802 now.
[14:25:54] selbot2: 03 open/accepted IEDriverServer 2.26.1-2.26.2 cannot findElement using By.xpath attribute selector - https://code.google.com/p/selenium/issues/detail?id=4802 [Type-Defect Priority-Medium]
[14:27:45] dawagner: jimevans: Just reappeared myself :)
[14:28:14] dawagner: Inspecting the diff we pulled in from closure
[14:29:30] plightbo has joined #selenium
[14:30:53] dawagner: @param {undefined} ignore Always undefined.
[14:30:56] dawagner: Nice.
[14:35:55] AutomatedTester: *sigh* 
[14:36:04] AutomatedTester: why arent our tests running in linux cleanly
[14:36:45] jimevans: AutomatedTester: alerts tests?
[14:36:56] AutomatedTester: jimevans: nope
[14:37:01] AutomatedTester: just randomly hangs
[14:37:06] AutomatedTester: at different points
[14:37:19] jimevans: yuck.
[14:37:24] dawagner: TIL: Closure contains inlined VBScript as string literals.
[14:38:56] dawagner: Ooh, it also looks like the closure compiler now supports template types.
[14:39:26] AutomatedTester: TIL, well was reminded, I hate debugging the xpi
[14:40:19] cgoldberg has joined #selenium
[14:43:39] fatguylaughing has joined #selenium
[14:45:43] dawagner: jimevans: The obvious culprits weren't to fault, starting to do controlled partial reverts :)
[14:45:56] jimevans: alright.
[14:47:33] jimevans: i'm verifying that the closure library really is at fault, since you weren't able to repro.
[14:47:53] dawagner: It definitely is closure library
[14:47:56] dawagner: I can repro now
[14:47:58] jimevans: or re-verifying, actually
[14:47:59] dawagner: But only on certain hostnames
[14:48:04] jimevans: oh. okay, then.\
[14:48:29] dawagner: (Which is odd and interesting itself)
[14:48:39] jimevans: that does seem odd.
[14:52:26] jimevans: bah!
[14:53:06] jimevans: firefox native event dll build is still broken for windows.
[14:55:40] jimevans: or, more to the point, it works for either firefox version <= 10 or firefox version >= 16, but not both at the same time. eranm, any ideas on how to rectify?
[14:56:35] AutomatedTester: jimevans: he said this morning he would look into it
[14:56:54] AutomatedTester: brrr i'm cold
[14:57:06] jimevans: i was hoping someone would've already asked about that. :)
[14:57:23] *AutomatedTester is a slave driver
[14:58:49] zac_sel_ has joined #selenium
[14:59:14] AutomatedTester: hmmm on linux synthetic tests appear to kill the browser but then just wait there
[14:59:25] eranm: jimevans, not yet.
[14:59:50] eranm: AutomatedTester, you are aware that the PageLoadingTests were causing that to Firefox 17 last week
[14:59:51] eranm: ?
[IRC logfile - Started Mon Dec  3 15:00:07 2012]
[15:00:07] AutomatedTester: i was not aware
[15:00:08] jimevans: eranm: as long as you're aware of the issue and pursuing it, I'm fine. :)
[15:00:17] AutomatedTester: oh wait, they popped back to life
[15:00:19] eranm: jimevans, from what I see the failure is for building the DLL for Firefox 3
[15:00:34] eranm: Which is the only one currently built with Gecko 2
[15:00:37] nirvdrum has joined #selenium
[15:00:43] jimevans: eranm: i also get the failures building for firefox 10.
[15:00:48] jimevans: (on windows)
[15:00:48] eranm: Interesting
[15:00:53] AutomatedTester: aparently 7GB RAM isnt enough for running the Java tests
[15:00:57] eranm: Could you paste them?
[15:00:58] jimevans: brb
[15:00:59] AutomatedTester: inside a vm
[15:01:02] AutomatedTester: and 2 cores
[15:01:25] jimevans: :gist
[15:01:26] selbot2: Please paste >3 lines of text to https://gist.github.com
[15:02:08] jimevans: eranm: https://gist.github.com/4195668
[15:02:20] jimevans: they're pretty much identical to the 3.x ones.
[15:03:15] eranm: hmm
[15:03:39] stan: does executeScript work with IE? i'm constantly getting a JavaScript error running it
[15:04:21] eranm: jimevans, could you try re-generating the header files on your Windows machine and compiling?
[15:04:24] jimevans: stan: executeScript works very well with IE in the general case. what, specifically, are you running into problems with? (hint: use :gist)
[15:04:25] selbot2: Please paste >3 lines of text to https://gist.github.com
[15:04:57] intchanter-work has joined #selenium
[15:05:21] dawagner: AutomatedTester: That's incredibly worrying.
[15:05:23] jimevans: eranm: regenerating the header files how, exactly? is there a specific target i should be using? and does using "clean" not do the trick?
[15:06:05] AutomatedTester: dawagner: it *might* be picking up my debug build of Firefox
[15:06:15] AutomatedTester: but yes, not good
[15:06:30] adamgoucher: <whinge>taking a break from one set of extjs scripts … to do another set.</whinge>
[15:06:32] stan: jimevans: seems any javascript, simplest i could think of was page.execute_script("document.write('test')")
[15:07:06] jimevans: stan: how about "return 1 + 1;" ?
[15:08:29] adamgoucher: oh. hu. friggin. ray. custom context menu so firebug menu is obscured
[15:08:32] AutomatedTester: my other gripe is crazy_fun does allow input from the terminal
[15:08:41] AutomatedTester: like when wanting to debug stuff
[15:08:54] jimevans: stan: is there any chance you're using the "ignoreProtectedModeSettings" capability (using whatever the appropriate mechanism is for your language binding) to start IE?
[15:10:13] adamgoucher: hrm. not extjs. its qooxdoo. whats another entry in the shitty-js-framework list
[15:10:42] eranm: jimevans, let me find the commit log for you
[15:10:57] stan: jimevans: ok, no complaints about return 1+1 - checking ignoreProtectedModeSettings
[15:10:59] eranm: r18210
[15:11:01] selbot2: 03eran.mes@gmail.com 6 days ago - EranMes: Getting the native events library compiling with Gecko 17. It also compiles (and works) with Gecko SDKs 10 and 16. For future reference, to generate header files from idl use: python third_party/gecko-17/linux64/sdk/bin/header.py -I third_party/gecko-17/linux64/idl -o cpp/webdriver-firefox/nsINativeEvents.h cpp/webdriver-firefox/nsINativeEvents.idl | ...
[15:11:02] selbot2: ... https://code.google.com/p/selenium/source/detail?r=18210 | http://seleniumhq.org/ci.jsp?r=18210
[15:11:11] eranm: jimevans, ^^^. From the command line.
[15:12:41] jimevans: eranm: give me a few minutes. i need to go manually download the sdk because some-crazy-how auto download of them no longer works.
[15:19:03] Ardesco: second thing for you to try stan is check you are using a return e.g. "return page.execute_script("document.write('test')"
[15:23:01] jimevans: eranm: same result after regenerating the headers.
[15:24:09] eranm: jimevans, ok. Have you re-generated *all* headers? for all idl files 
[15:24:18] farlan has joined #selenium
[15:24:26] dawagner: jimevans: Interestingly, the results of my bisection are that one of the things I thought was a likely culprit does indeed appear to be the culprit
[15:24:39] jimevans: dawagner: well, that's something!
[15:24:58] dude-x has joined #selenium
[15:25:10] llaskin has joined #selenium
[15:25:20] dawagner: I have a decent idea about what may be wrong, I'll try to get a fix together :)
[15:25:22] jimevans: eranm: i've no idea. i ran header.py, using the command line in the commit log. what else should i be using? 
[15:26:02] *jimevans knows nothing about the gecko sdk, and is disinclined to start learning.
[15:26:48] smccarthy has joined #selenium
[15:27:51] AutomatedTester: dawagner: does closure delete debugger; statements?
[15:28:08] eranm: jimevans, there are several idl files under cpp/webdriver-firefox. 
[15:28:18] eranm: This command should be ran for each and every one of them
[15:29:40] bluescreen10 has joined #selenium
[15:30:05] AutomatedTester: eranm: do you know if closure deletes debugger; statements?
[15:30:07] nirvdrum has joined #selenium
[15:30:22] eranm: AutomatedTester, nope, sorry.
[15:30:56] *AutomatedTester is having fun trying to debug our JS and guessing we do everything in our power to make that as difficult as possible
[15:31:01] dawagner: AutomatedTester: No idea? Check the source?
[15:31:57] jimevans: eranm: have regenerated all of the headers (nsIBaseWindow, nsINativeMouse, nsINativeKeyboard, nsINativeIME, nsINativeEvents). same result.
[15:33:46] eranm: jimevans, ok. Will have a look myself once vmware starts behaving
[15:37:04] farlan has joined #selenium
[15:41:18] samphippen has joined #selenium
[15:54:02] jimevans: bah. now i'm blocked.
[15:54:48] farlan has joined #selenium
[15:54:56] davehunt_ has joined #selenium
[15:58:23] AutomatedTester: ?
[IRC logfile - Started Mon Dec  3 16:00:27 2012]
[16:00:27] jimevans: i need to run a couple of tests for IE against trunk, but i can't build my environment because of the gecko issues. (i need to build the test web server for the webdriver unit tests, and that target depends on building the firefox native event dlls). eranm's looking into it, so i'll just wait.
[16:01:42] AutomatedTester: argg
[16:01:56] AutomatedTester: crazyfun blocking inputs to stuff is making me sad
[16:03:43] *Ardesco wonders if he could make a maven project to replace crazy fun
[16:03:57] Ardesco: in case you're wondering
[16:04:00] *Ardesco is trolling
[16:04:40] *AutomatedTester will raise this with Simon
[16:04:56] AutomatedTester: i want to be able to use pdb from something spawned from CrazyFun
[16:05:57] dawagner: AutomatedTester: Blocking inputs?
[16:06:05] AutomatedTester: yes
[16:06:06] dawagner: Oh, as in, stdin?
[16:06:11] AutomatedTester: stdin
[16:06:20] AutomatedTester: yea
[16:06:38] AutomatedTester: I want to be able to use pdb from something that crazyfun started
[16:10:16] stephend has joined #selenium
[16:10:19] alexglow has joined #selenium
[16:10:33] AutomatedTester: protip: dont use ingo instead of info. It locks up FxDriver
[16:14:13] kallisti: AutomatedTester: It would appear that some webdriver servers respond with 302 instead of 303 when creating a new session?
[16:14:25] kallisti: does this sound right?
[16:14:35] AutomatedTester: is one of them Chrome?
[16:15:25] Guest67582 has left #selenium
[16:16:22] kallisti: standalone seems to respond with 302, whereas chromedriver responds with 303
[16:16:29] Ardesco has joined #selenium
[16:16:46] lukeis has joined #selenium
[16:16:47] selbot2: lukeis: note from dawagner about 6 hours ago: possibly? mvn --version > Apache Maven 2.2.1 (rdebian-8) 
[16:17:12] lukeis: dawagner: that'll do it… need maven 3
[16:17:29] lukeis: how did that happen? :-/
[16:17:47] kallisti: AutomatedTester: ^
[16:17:55] dawagner: I imagine the machine rebooted and I forgot to have it install maven 3 automatically :)
[16:18:01] AutomatedTester: kallisti: and firefoxdriver?
[16:18:14] kallisti: AutomatedTester: I have not used a "firefoxdriver" outside of the standalone server.
[16:18:17] kallisti: so... I don't know.
[16:18:24] AutomatedTester: ok, IEDriver?
[16:18:27] kallisti: when I use chromedriver through standalone I get a 302
[16:19:01] kallisti: AutomatedTester: I haven't actually checked what the HTTP status code is, but IE driver works with hs-webdriver, which currently only works with 302 (since I've primarily tested with standalone)
[16:19:08] kallisti: so I assume 302?
[16:19:23] AutomatedTester: I heard chrome was an issue
[16:19:24] jamesoram has joined #selenium
[16:19:40] AutomatedTester: i dont really check the status code in the python bindings
[16:19:43] AutomatedTester: just the body
[16:19:45] AutomatedTester: iirc
[16:20:03] dawagner: lukeis: Should be fixed
[16:20:08] dawagner: I'll push a long term fix in a bit
[16:20:16] lukeis: thx :)
[16:20:25] kallisti: AutomatedTester: yes I currently have an issue with chrome. I have a potential fix (respond to both 302 and 303, or potentially just any 3xx) in mind but I'm not sure if it's the correct one.
[16:21:10] plightbo has joined #selenium
[16:21:13] kallisti: the jsonwireprotocol wiki page says it should be 303, so if anything chromedriver is operating correctly, whereas the 302 response is non-standard.
[16:21:25] eranm: jimevans, why doesn't the windows build falls back into using the prebuilts if building the c++ components fail?
[16:21:29] eranm: fails
[16:21:32] plightbo has joined #selenium
[16:21:41] jimevans: eranm: i have no idea.
[16:22:02] farlan has joined #selenium
[16:22:29] llaskin: anyone out there using RVM and jenkins?
[16:22:42] lukeis: kallisti: i think the only problem with strictly doing 303 is the caveat pointed out in the http spec http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.4
[16:22:50] jamesoram has joined #selenium
[16:22:56] lukeis: (why there are 302's) or someone was just lazy..
[16:24:17] farlan has left #selenium
[16:24:34] kallisti: lukeis: ah, I wasn't aware of this caveat.
[16:24:36] farlan has joined #selenium
[16:25:26] kallisti: so then "respond to both 303 and 302" is the correct fix for my client then.
[16:25:31] kallisti: thanks for the help.
[16:26:28] dawagner: :note jleyba Closure now assumes goog.global['document'] is defined, as well as navigator; is the proper way of fixing this to add document to the whitelist in https://code.google.com/p/selenium/source/browse/trunk/rake-tasks/crazy_fun/mappings/javascript.rb#536 explicitly, to pass window as the context arg, or something else entirely
[16:26:29] selbot2: ok!
[16:26:35] dawagner: jimevans: That's the problem ^^
[16:26:50] eranm: jimevans, can it be made to do so?
[16:27:15] lukeis1 has joined #selenium
[16:28:00] jimevans: eranm: i'm not sure. it probably can, but i don't know the albacore library well enough to know how it handles failed builds.
[16:28:36] kallisti: AutomatedTester: you have to check the Location header on a 303/302 response, so how does that work in the python bindings if it doesn't check the status code.
[16:29:59] mreedell_ has joined #selenium
[16:30:32] Dude-X__ has joined #selenium
[16:30:37] AutomatedTester: i do check the response code
[16:30:46] AutomatedTester: https://code.google.com/p/selenium/source/browse/trunk/py/selenium/webdriver/remote/remote_connection.py#341
[16:32:04] kallisti: ah okay.
[16:32:19] djinni_ has joined #selenium
[16:32:54] kallisti: AutomatedTester: so you /lied/ to me. :P
[16:32:58] AutomatedTester: kallisti: but as you see, only for 399 to 500
[16:33:05] kallisti: oh.
[16:33:07] kallisti: okay.
[16:33:55] jleyba has joined #selenium
[16:33:56] selbot2: jleyba: note from dawagner 7 minutes ago: Closure now assumes goog.global['document'] is defined, as well as navigator; is the proper way of fixing this to add document to the whitelist in https://code.google.com/p/selenium/source/browse/trunk/rake-tasks/crazy_fun/mappings/javascript.rb#536 explicitly, to pass window as the context arg, or something else entirely 
[16:34:01] Ajay__: AutomatedTester: i thought it was frm 400 to 499
[16:34:28] AutomatedTester: Ajay__: I suffer from off by one errors
[16:34:53] lukeis1: > 399 is 400+
[16:35:01] cgoldberg has joined #selenium
[16:35:10] AutomatedTester: lukeis1: I suffer from off by one errors
[16:35:11] jleyba: dawagner: Not enough context.  What's the problem with document being defined?
[16:35:42] dawagner: document isn't currently defined on goog.global because we define goog.global = {navigator: window.navigator}
[16:35:45] AutomatedTester: jleyba: do you know if google closure strips debugger; statements out of the javascript
[16:36:02] dawagner: goog.userAgent now depends on goog.global['document'] being defined and correct
[16:36:25] jleyba: AutomatedTester: not sure, let me find out
[16:36:31] jleyba: dawagner: Oh, this is for the fragments?
[16:36:35] dawagner: Yep
[16:36:53] jleyba: Yeah, just change the context object we pass in: {navigator: window.navigator, document: window.document}
[16:37:04] dawagner: Ok, cool :) Thanks
[16:37:10] elopio_ has joined #selenium
[16:37:28] plightbo_ has joined #selenium
[16:37:53] jleyba: AutomatedTester: doesn't look like it
[16:37:54] jleyba: http://closure-compiler.appspot.com/home
[16:38:01] kallisti: AutomatedTester: hm, you check for image/png content-type. Is there any driver that actually does that?
[16:38:01] kallisti: body = response.read().replace('\x00', '').strip()
[16:38:01] kallisti: here's another thing I don't do.
[16:38:15] kallisti: (specifically the replace() bit)
[16:38:36] jleyba: :log
[16:38:37] selbot2: http://illicitonion.com/selogs/selenium/2012/12/03.txt | http://illicitonion.com/selogs/search
[16:40:18] Ajay__: AutomatedTester: jleyba: i think it strips few of the ; statements 
[16:40:19] jamesoram has joined #selenium
[16:40:39] jleyba: semicolons aren't necessary in js
[16:40:48] jleyba: so yes, the compiler will strip those whenever it can
[16:41:17] dawagner: Oh javascript.
[16:41:33] jleyba: kallisti: the replace() bit is necessary b/c the java server sucks and sends a bunch of null characters with almost every json response
[16:41:55] kallisti: jleyba: the stadalone server? I have never had any issues with that.
[16:42:07] kallisti: maybe my JSON parser just ignores them.
[16:42:13] jleyba: probably
[16:44:28] jleyba: dawagner: Most modern languages are dropping the ;
[16:44:43] jleyba: A lot of devs get all worked up over them.  Don't see the big deal personally
[16:45:57] sassda has joined #selenium
[16:45:59] dawagner: jleyba: I'm fine with languages not having ;s, in fact I'm in favour of it.  I'm not in favour of having it optional, but there being conditions where skipping one can change the semantics of the code
[16:46:30] kallisti: jleyba++
[16:46:45] jleyba: most of the time it's straight forward.  ; or \n
[16:47:34] samphippen has joined #selenium
[16:47:40] jimevans: jleyba: it's the "most of the time" that's problematic.
[16:47:53] simonstewart has joined #selenium
[16:48:12] kallisti: it's that fun time where I attempt to refactor some code without breaking anything.
[16:48:13] simonstewart: Yo
[16:48:18] jleyba: jimevans: Still don't see the problem.  A dev with inconsistent coding is more problematic than whether to use ;
[16:48:22] jimevans: ohai simonstewart!
[16:48:27] simonstewart: jimevans: :cla
[16:48:28] selbot2: 03dawagner half a minute ago - DanielWagnerHall: Define document on goog.global for fragments, as the closure library now depends on it.  Fixes issue #4802. | https://code.google.com/p/selenium/source/detail?r=18243 | http://seleniumhq.org/ci.jsp?r=18243
[16:48:28] selbot2: http://goo.gl/qC50R
[16:48:30] dawagner: jimevans: ^^
[16:48:35] RossPatterson: Good west-coast-morning, simonstewart!
[16:48:47] simonstewart: And what a fine morning it is
[16:48:51] simonstewart: Can I go back to bed now?
[16:48:54] jleyba: So, back to the SafariDriver paper-cut bug of the day
[16:49:16] jleyba: Also known as, let's find the memory leak in Safari's DOM model
[16:49:18] jimevans: simonstewart: w00t! let's pass this along to our friends at MSFT.
[16:49:22] simonstewart: jleyba: if you're bored of the safari paper cuts, you could always hack on crazyfun
[16:49:32] simonstewart: jimevans: sorry it took so long
[16:49:39] jimevans: np.
[16:49:43] kallisti: I return an empty JSON array when the response has an empty body, but I don't remember why...
[16:49:45] dawagner: simonstewart: You keep sending me emails saying "Don't bother hacking on this, I'm about to rewrite it"...
[16:49:46] jleyba: simonstewart: I'll just sit back and enjoy the fine build system I have here at the plex and let dawagner have the crazyfun
[16:49:48] kallisti: I just remember that something was broken if I didn't. :P
[16:49:53] RossPatterson: Wow - that's the whole of the new CLA?  Just "Apache 2 kthxbye"?
[16:49:55] simonstewart: jleyba:  :P
[16:50:02] jimevans: dawagner: thanks, mate. let me check that out.
[16:50:10] simonstewart: It's pretty close to being able to build selenium-server-standalone
[16:50:20] simonstewart: And it does it in ~2 minutes on my MBP
[16:50:30] jleyba: simonstewart: I might take a poke at the JS compilation
[16:50:35] simonstewart: I suspect dawagner's machine would be Even Faster
[16:50:53] simonstewart: jleyba: the key class there will be JavascriptFragment
[16:51:00] simonstewart: You can ask the Label for its implicit targets
[16:51:00] jleyba: would be nice if we spun the closure compiler up in the crazyfun jvm once and invoked it multiple times for the individual js builds
[16:51:03] noahsussman has joined #selenium
[16:51:09] jleyba: (or are you already doing that? I haven't read the code)
[16:51:14] simonstewart: We already do that
[16:51:27] simonstewart: It's all in the same process
[16:51:42] simonstewart: Problem is, I think that the closure compiler is leaking state like a bastard
[16:51:55] simonstewart: So something that compiles nicely when run in isolation occasionally craps out
[16:52:09] lukeis1: simonstewart: should we list the 'header' that is required for all files in the cla too?
[16:52:28] simonstewart: I don't think so
[16:52:36] simonstewart: We want the form to be as short as possible
[16:52:45] lukeis1: link to one?
[16:52:48] simonstewart: And our header is a standard apache 2 one with copyrights
[16:52:52] simonstewart: Sure. We can do a link to one
[16:53:42] lukeis1: do we need to re-sign?
[16:53:51] simonstewart: The main problem I have with CrazyFun right now is handling the empty jars we sometimes create. Well, empty of class files
[16:53:53] simonstewart: lukeis1: nope
[16:53:56] simonstewart: You signed
[16:53:59] lukeis1: k
[16:54:08] *RossPatterson rushes off to sign the new CLA!
[16:54:09] simonstewart: The other CLA claimed to want more
[16:54:14] jleyba: simonstewart: that's only for rc/core right?
[16:54:27] simonstewart: I think there's something in Grid too
[16:54:28] lukeis1: yay RossPatterson :)
[16:54:29] admc has joined #selenium
[16:54:46] simonstewart: BTW, where did this thing of using "//javascript/blah/blah:foo.js" come from?
[16:54:48] Ajay__: simonstewart: one qq 
[16:54:53] simonstewart: Rather than ending ":foo"?
[16:54:58] simonstewart: Ajay__: fire away
[16:55:34] kallisti: http://andrewvos.com/2011/02/21/amount-of-profanity-in-git-commit-messages-per-programming-language/
[16:56:14] simonstewart: jleyba: good answer on the "allow additional safari extensions"
[16:56:32] Ajay__: (speaking of jetty repackaging ) does the repackaging of jars handle class invoked from reflections , some classes  have string literals  String myclass = "com.xyz"  ?
[16:56:53] simonstewart: Ajay__: dunno. I suspect not
[16:57:35] simonstewart: AutomatedTester: how's 2.27?
[16:57:43] Ajay__: simonstewart: breaking my head for past few hours to upgrade htmlunit 
[16:57:51] lukeis has joined #selenium
[16:57:53] simonstewart: How so?
[16:58:11] Ajay__: htmlunit depends on latest versions of jetty 
[16:58:17] simonstewart: what?
[16:58:24] simonstewart: That makes absolutely no sense
[16:58:25] simonstewart: Why?
[16:58:51] simonstewart: You may not know why :)
[16:59:11] lukeis: death to htmlunitdriver, long live ghostdriver ;)
[16:59:28] dude-x has joined #selenium
[16:59:34] dawagner: simonstewart: I think that was my doing, but I can't remember exactly what motivated it - point me at an example?
[16:59:39] Ajay__: htmunit 2.11 uses websockets 
[IRC logfile - Started Mon Dec  3 17:00:11 2012]
[17:00:11] simonstewart: java/server/src/org/openqa/selenium/remote/server/resource/build.desc
[17:00:25] simonstewart: And they're pulling in a complete jetty dependency for it?
[17:00:36] jimevans: lukeis: +1
[17:02:03] jleyba: dawagner: I think it's part of the rename rule for your machine translations
[17:02:13] simonstewart: Furrfu
[17:02:16] simonstewart: It's funky
[17:02:42] dawagner: It *is* funky? But also, output files should be valid build targets :)
[17:02:52] jleyba: i don't think it's funky
[17:03:06] jleyba: you depend on a specific file, not the rule that generates it, which may also generate 3 other files you don't need
[17:03:24] simonstewart: jleyba: it should be an implicit
[17:03:39] jimevans: :yt we want the funk
[17:03:40] selbot2: WE NEED THE FUNK 70's MedleyVideoMix - http://www.youtube.com/watch?v=TJ8DAsKhJ9E&feature=youtube_gdata
[17:03:42] simonstewart: You depend on the target, then you pull out the correct generated artifact 
[17:03:49] dawagner: simonstewart: It can't be implicit if there are multiple output files
[17:04:08] simonstewart: Sure it can. It's up to the rules which implicats it understands
[17:04:20] dawagner: Not if the rule is rename...
[17:04:39] simonstewart: The implicit is to do with the rule that generates the artifact
[17:04:48] simonstewart: Not the rule that's using it
[17:04:52] simonstewart: *sigh*
[17:05:06] simonstewart: It'd be possible to hack around this in CrazyFun
[17:05:24] selbot2: 03james.h.evans.jr@gmail.com half a minute ago - JimEvans: Updating version resources and CHANGELOG for updated IEDriverServer.exe prebuilt. | https://code.google.com/p/selenium/source/detail?r=18244 | http://seleniumhq.org/ci.jsp?r=18244
[17:10:56] jamesoram has joined #selenium
[17:14:10] Swadq has joined #selenium
[17:16:06] simonstewart: So, anyone up for a quick CrazyFun chat?
[17:16:06] icio has joined #selenium
[17:16:21] *lukeis hides
[17:16:38] *RossPatterson is really glad that video avoided the P-Funk awkward performing-in-diapers phase
[17:17:35] simonstewart: so, right now CrazyFun is composed of three moving parts: the build file parser, the build coordinator and the builders
[17:18:07] simonstewart: The parser is dumb: it only understands how to read build files, and follows declared dependencies in targets
[17:18:33] simonstewart: the coordinator is also dumb. Its job is to manage the limited pool of builders and parcel them out to specific builds
[17:18:50] simonstewart: the builds use the builders to take the raw target information and Do Stuff
[17:19:28] simonstewart: In order to support "//foo:bar.js" being a rule created by "//foo:bar" the parser will need way more smarts
[17:19:51] simonstewart: Specifically, it'll need to know which builder matches up with which target type
[17:20:04] jarib: you're describing the next iteration of crazy fun, not the current one, right?
[17:20:05] simonstewart: So it can ask that to list additional rules
[17:20:07] simonstewart: Right
[17:20:13] simonstewart: In the "new_world" branch
[17:20:21] simonstewart: It's getting close to building selenium-server-standalone
[17:20:28] jarib: nice
[17:20:43] simonstewart: On my machine, I've skipped compiling two jars that are bundles of resources
[17:20:49] simonstewart: It takes ~2 minutes for a clean build
[17:20:52] stackedsax has joined #selenium
[17:21:02] jarib: very cool
[17:21:04] simonstewart: 15" MBP 
[17:21:11] simonstewart: It's got a number of issues :)
[17:21:15] adamgoucher: haha. this is what firebug says the xpath is to this stoopid qooxdoo cell is: /html/body/div[2]/div/div[2]/div/div/div/div/div/div/div/div[2]/div/div/div/div/div/div/div/div/div/div[2]/div/div/div/div/div/div/div/div/div/div[3]/div/div/div/div/div/div/div/div/div/div/div/div/div/div/div/div[2]/div/div/div/div/div/div[4]/div/div/div/div/div[4]/div[5]
[17:21:22] simonstewart: And the code really is a hack in progress
[17:21:41] simonstewart: I plan on getting it working well enough to reliably build selenium, then ditching it and doing a clean rewrite with sanity thrown in
[17:22:22] simonstewart: But I'd like to solve this "additional target generated as a sub-target of a real target" thing in a clean way
[17:22:33] simonstewart: One way, which I reject, is to make the parser aware of all the rules
[17:22:57] simonstewart: I reject it because the idea is that you should be able to add unknown builders to the coordinator without needing the clients to be aware of them
[17:23:07] simonstewart: That knowledge doesn't belong in the parser
[17:23:40] *jimevans realizes he's going to have to completely reimplement the entirety of building visual studio targets for the new crazy fun.
[17:23:49] simonstewart: jimevans: nope
[17:23:53] simonstewart: It'll be fine
[17:24:06] simonstewart: The idea is that the build files remain basically as they are
[17:24:13] simonstewart: Those are our API for a build
[17:25:19] jimevans: right, but don't i have to at some point implement the "visualc_library" builder?
[17:25:40] plightbo has joined #selenium
[17:26:03] *simonstewart reads the visaulc_library rule
[17:26:37] jimevans: and the dotnet_library rule for that matter.
[17:26:50] simonstewart: So all we do is kick off an msbuild, right?
[17:27:06] simonstewart: Which comes albacore
[17:27:20] jimevans: for c++ yes. for .net, no.
[17:27:41] simonstewart: The JS compilation was slightly more involved than this
[17:27:44] AutomatedTester: simonstewart: can crazyfun have an ability to allow stdin to steps it invokes
[17:27:49] AutomatedTester: pretty please :)
[17:27:50] simonstewart: Got it working pretty quickly
[17:27:52] simonstewart: Why?
[17:27:54] plightbo_ has joined #selenium
[17:28:03] AutomatedTester: simonstewart: so I can step into pdb
[17:28:08] simonstewart: jimevans: When it comes to it, I'll hack those steps
[17:28:13] simonstewart: What?
[17:28:20] AutomatedTester: python debugger
[17:28:25] simonstewart: Why would I step into the pdb during a crazy fun build?
[17:28:35] AutomatedTester: if I start something that does tests
[17:28:38] AutomatedTester: and I want to debug tests
[17:28:54] simonstewart: Furrfu
[17:29:01] simonstewart: Can't you attach pdb to a running process?
[17:29:02] AutomatedTester: so I put import pdb; pdb.set_trace() it stops the run and waits for input
[17:29:15] jimevans: simonstewart: i don't mind doing it, just need a heads-up when sanity is restored so i can hack away. :)
[17:29:29] simonstewart: jimevans: you'll get the heads up
[17:29:33] simonstewart: :)
[17:29:36] kallisti: oh man, I am running into all kinds of problems with chromedriver. it seems like standalone will fix all of this stuff when it's used as a proxy.
[17:29:59] simonstewart: OK. So no-one has any ideas on how to resolve the "magic rules appearing from nowhere problem"?
[17:30:11] simonstewart: Other than "make the build system monolithic"?
[17:30:16] farlan has joined #selenium
[17:30:29] jleyba: kallisti: chromedriver should be compliant with the json spec
[17:30:32] simonstewart: biab
[17:30:40] jleyba: java standalone server is not compliant
[17:34:39] SamuraiJack has joined #selenium
[17:35:01] kallisti: jleyba: right.
[17:35:06] dawagner: simonstewart: Adding an analysis pass wouldn't necessarily be monolithic
[17:36:09] dawagner: Have part of the interface of whatever a build-rule is be getExpectedOutputFiles, and just expand labels based on that
[17:36:42] plightbo has joined #selenium
[17:36:57] simonstewart: Well, one idea would be to have "co-processors" or something, that the parser could pass each target to
[17:37:28] sfbrian has joined #selenium
[17:37:29] simonstewart: Since most targets are very well behaved and don't magically create additional targets
[17:37:49] simonstewart: export_file and the js_{binary
[17:37:56] simonstewart: ,fragment} rules do
[17:37:58] simonstewart: It seems
[17:38:49] jleyba: so you think you should only be able to depend on a rule and not a specific output file?
[17:39:37] simonstewart_ has joined #selenium
[17:40:36] teodosia_sel has left #selenium
[17:40:43] simonstewart_: Yes, only a rule
[17:40:50] simonstewart_: Though we have implicts
[17:41:04] simonstewart_: Which allow us to go "this rule, but this subset of the things that this rule does"
[17:41:22] simonstewart_: One problem with that is if you use an implicit, and want an implicit from that
[17:41:44] simonstewart_: (say "//javascript/foo:bar:ff" and you just want a ".js" file)
[17:42:12] simonstewart_: "//javascript/foo:bar:ff:js"?
[17:42:12] jleyba: i assume you're talking about the fragments then
[17:42:29] simonstewart_: yeah
[17:43:07] simonstewart: (because although I'm planning on rewriting this, the basic outlines of the design are sound)
[17:43:07] jleyba: js_fragment generates two .js files: $name_exports.js and $name.js
[17:43:19] jleyba: $name.js is the compiled fragment
[17:43:23] simonstewart: The NewCrazyFun doesn't do "_exports.js"
[17:43:39] simonstewart: As we don't seem to use them in our build
[17:43:41] jleyba: $name_exports.js is a generated file that is necessary to compile the $name.js
[17:44:02] simonstewart: Oh. NewCrazyFun does add that as a generated artifact
[17:44:31] simonstewart: (basically, every builder can register anything it builds using "artifacts.register(label, artifact)"
[17:44:33] towski has joined #selenium
[17:45:02] simonstewart: With "artifacts" being, conceptually, a central store of things we successfully built
[17:45:19] simonstewart: and want to make available to others
[17:45:42] simonstewart: (so "_exports.js" would not be an artifact, and therefore isn't resolvable)
[17:45:59] simonstewart: Further, artifact instances may also be resources
[17:46:25] simonstewart: Which indicate that they can be included in the outputs of other rules
[17:47:45] kallisti: ah I found the issue. standalone returs a 204 No Content whereas chromedriver actually returns a JSON object with status code 0.
[17:48:06] kallisti: and all my code was tested with standalone for the most part.
[17:48:55] simonstewart: (someone else really should take a look at the code :)
[17:50:14] jleyba: kallisti: 204 should be treated as equivalent to 200 with {status:0, value:null}
[17:50:50] jleyba: I wish we could make another pass at the json protocol
[17:50:57] simonstewart: because?
[17:51:08] jleyba: have everything return 200 with a json body.  reserve 500 for the server blew up on something
[17:51:20] kallisti: jleyba: chromedriver actually responds with {status:0, value:{}}
[17:51:20] jleyba: much easier to implement clients against a pure json spec
[17:51:42] jleyba: there's too many edge cases in the wire protocol
[17:51:49] jleyba: the biggest one is the stupid redirect after POST /session
[17:51:53] jcarr has joined #selenium
[17:52:01] simonstewart: That's a pretty well known pattern
[17:52:09] jleyba: for rest, but we're rest-ish
[17:52:21] jleyba: and it doesn't really fit b/c that's the *only* command that does a redirect
[17:52:21] simonstewart: I'd like us to be REST
[17:52:42] simonstewart: The findElements probably should do too
[17:53:23] jleyba: One day I'll create a branch for my server rewrite
[17:53:39] jleyba: 1 stream-lined pipeline that accepts commands over http, websocket, tcp, whatever
[17:53:43] kallisti: hm, I'm not sure how to fix this problem actually.
[17:53:52] simonstewart: Well, that's why we have Handlers
[17:54:02] simonstewart: The front end is a router
[17:55:09] jleyba: yes, the actual handlers are fine
[17:55:18] jleyba: the problem is in the routing
[17:55:52] kallisti: I actually just treat the redirect as a special case, since it's only done with session creation.
[17:56:00] jimevans: simonstewart: what are the advantages of the REST approach vs. a single endpoint with the descriptive JSON message payload? (i'm not criticizing, just curious to hear the logic behind the design)
[17:56:18] santiycr has joined #selenium
[17:56:50] simonstewart: Other than making caching easy?
[17:56:59] jleyba: caching bad
[17:57:03] jleyba: for us, caching very bad
[17:57:17] simonstewart: That's why idempotent operations are GETs
[17:57:29] jleyba: we dont have any idempotent operations
[17:57:39] jleyba: GET /session/:sessionId/element/:id/name
[17:57:51] jleyba: that could return a StaleElementReferenceError, invalidating :id on the server
[17:57:55] simonstewart: More efficient routing too
[17:58:14] simonstewart: :sessionId in particular is  a handy hook for that
[17:58:49] jamesoram has joined #selenium
[17:59:16] simonstewart: (e.g.: if my session id looks like "sauceX" an intermediate router can bounce that request to Sauce with no additional processing
[17:59:27] simonstewart: In particular, it doesn't need to create the Command object
[IRC logfile - Started Mon Dec  3 18:00:05 2012]
[18:00:05] kallisti: Command objects? what are those?
[18:00:11] simonstewart: :api
[18:00:19] plightbo has joined #selenium
[18:00:27] jleyba: kallisti: talking about the java api
[18:00:27] jimevans: :apidocs
[18:00:28] selbot2: .NET: http://goo.gl/Fm3cw | Java: http://goo.gl/kKQqM | Ruby: http://goo.gl/cFyyT | Python: http://goo.gl/5yWoR
[18:00:33] simonstewart: http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/remote/Command.html
[18:00:47] kallisti: oh, weird, I thought we were talking about the JSON protocol.
[18:01:02] simonstewart: The protocol is part JSON, part HTTP
[18:01:04] dude-x has joined #selenium
[18:01:14] kallisti: yes, the HTTP/JSON protocol
[18:01:32] simonstewart: Right. So we're talking about the reasons why we use multiple end points rather than a single one
[18:01:51] simonstewart: And _that_ boils down to how intermediate nodes can handle the http requests
[18:02:28] jleyba: i'm not really opposed to the multiple end points
[18:02:31] simonstewart: (which is probably a good way of articulating things)
[18:02:33] simonstewart: :)
[18:02:37] simonstewart: Always good to ask
[18:02:52] jleyba: i'm arguing for streamlined responses
[18:02:58] jimevans: i'm not opposed to them either, i just hadn't thought it all the way throught.
[18:02:59] jimevans: t.
[18:03:06] jimevans: um. through.
[18:03:13] simonstewart: We can certainly clear up response code
[18:03:14] simonstewart: s
[18:03:25] simonstewart: Though I do favor multiple end points
[18:03:42] kallisti: unrelated: unless I'm missing something, there is no standard response for webdriver commands that have no return value.
[18:03:58] simonstewart: I'd also like to use mime-type negotiation
[18:04:01] kallisti: for standalone it's a 204 No Content, for chromedriver it's {status: 0, value: {}}
[18:04:22] simonstewart: and it'd make sense to use HTTP response codes that make sense
[18:04:38] simonstewart: Sending a 200 for a request that failed doesn't feel appropriate
[18:05:09] jleyba: suppose you fail to find an element
[18:05:21] jleyba: the command was valid - you performed a search for an element
[18:05:31] jleyba: so 200 is "yes, i got your command and executed it"
[18:05:42] jleyba: the body would then have the details about the result of the command
[18:05:46] *jimevans is letting jleyba steal his thunder.
[18:05:54] jleyba: 4xx should be reserved for malformed commands (missing command parameters)
[18:06:15] jleyba: 5xx should be reserved for when the server barfs
[18:06:27] simonstewart: But although the command executed, it didn't actually succeed
[18:07:04] simonstewart: For example, instead of returning a StaleElementException a 410 (Gone) might be appropriate
[18:07:13] simonstewart: "The requested resource is no longer available at the server and no forwarding address is known."
[18:07:15] awilson820 has joined #selenium
[18:07:39] simonstewart: A perfect description of what that exception is
[18:07:54] jleyba: That adds a lot of complexity to HTTP clients
[18:08:06] jimevans: i was just thinking that.
[18:08:13] jleyba: And not all webdriver implementations use JSON/HTTP
[18:08:34] simonstewart: Sure, but, and this is important, they're not using JSON/HTTP
[18:08:46] jleyba: guess I walked into that one...
[18:08:51] kallisti: I think it makes more sense to use custom JSON error codes rather than attempting to force things to map to HTTP semantics.
[18:08:51] simonstewart: Those that do should probably use JSON/HTTP
[18:08:52] simonstewart: :)
[18:09:16] simonstewart: Ugh. 
[18:09:28] simonstewart: HTTP provides us with a way of reporting certain classes of errors
[18:09:35] simonstewart: We should be using that
[18:09:48] simonstewart: A "200" should mean "it's okay to proceed"
[18:09:53] simonstewart: "nothing went wrong"
[18:10:15] simonstewart: We certainly should be thinking about how to sensibly map down to HTTP where possible
[18:10:47] RandLAT has joined #selenium
[18:10:53] simonstewart: Session creation should be a 201, for example
[18:12:18] *simonstewart suspects that jleyba is getting irked
[18:12:20] simonstewart: :)
[18:12:23] dawagner: imo we just use HTTP because it's a handy transport protocol that every language can interface, we shouldn't use any more smarts than request + response - I'll give you paths beacuse they're handy.
[18:12:44] stackedsax has joined #selenium
[18:12:53] kallisti: maybe I should just create a custom type with a new FromJSON instance, so that I can capture all of the various ways drivers say "no return value"
[18:12:54] RandLAT: Did Firefox 17 break Selenium IDE 1.9.1, by any chance?
[18:13:08] simonstewart: kallisti: ?
[18:13:18] jleyba: kallisti: that's what all the existing language bindings do
[18:13:53] simonstewart: dawagner: what we have right now is definitely suboptimal
[18:14:00] simonstewart: "My First REST"
[18:14:09] simonstewart: And that's my fault
[18:14:10] jimevans: kallisti: the .NET bindings, for example, assume and 2xx response is a success.
[18:14:25] dawagner: *shrug* given we have to do the JSON parsing anyway, it makes sense to me to do the parsing in one place, not several
[18:14:41] dragonedge has joined #selenium
[18:14:45] simonstewart: dawagner: the advantage isn't only at the end points
[18:14:49] jimevans: s/and/any/
[18:14:58] dragonedge has left #selenium
[18:14:59] simonstewart: Grid could be more efficient if it was just a router
[18:15:08] dawagner: Sure, which is why I'll give you paths, which are useful in the middle
[18:15:12] simonstewart: Without needing any knowledge of the internals of a command
[18:15:17] dawagner: I'm not convinced anything else is :)
[18:15:31] kallisti: jimevans: not quite what I meant. I do that as well.
[18:15:55] simonstewart: But we're already talking about using "500" responses
[18:16:07] simonstewart: So we're already leaning towards using status codes properly
[18:16:51] simonstewart: And I always wanted to use mime-type negotiation to provide a handy web-based front-end for a server
[18:16:58] simonstewart: (never wrote it, but that's the idea)
[18:17:09] simonstewart: s/that's/that was/
[18:18:28] simonstewart: If it helps, the history of the wire protocol started off as a raw socket connection spooling ASCII all over the place
[18:18:42] simonstewart: We're carrying around a certain amount of baggage from those days
[18:19:03] *jleyba remembers trying to make heads or tails of opaque parameter arrays
[18:19:23] simonstewart: We've moved forward since then :)
[18:19:36] kallisti: jimevans: the JSON parsing function has a polymorphic return type. So if you're expecting a string, it will check to see if the JSON is a string and otherwise give you an error, or if you're expecting a list it will attempt to do the same with a JSON array. you can create custom types and specify how JSON values are translated.
[18:20:16] simonstewart: BTW, I'm pretty keen on replacing our current JSON library with something modern (jackson, maybe?)
[18:20:27] *dawagner doesn't miss parameter arrays :)
[18:20:39] simonstewart: I don't either
[18:21:02] jleyba: Fuck you, Safari. Fuck. You.
[18:21:03] kallisti: jimevans: the problem here is that in Haskell the common convention for specifying that there is no sensible return type is to use the () type. However, the fromJSON code for () only works with empty arrays. but I want null, {}, [], etc to all succeed. so I just need to make a custom type for "empty results"
[18:21:06] dawagner: https://www.youtube.com/watch?feature=player_embedded&v=o7OE1uas2yg#!
[18:21:12] FalCone has joined #selenium
[18:21:14] *jleyba feels slightly better
[18:21:21] eranm: jimevans, I have to reboot my machine so vmware would be willing to load my Windows VM
[18:21:26] simonstewart: jleyba: kill it with fire
[18:21:32] dawagner: eranm: You can use my Windows machine if you want :)
[18:21:36] eranm: jimevans, will let you know tomorrow what the results of my compilation are
[18:21:45] plightbo has joined #selenium
[18:21:45] jimevans: eranm: okay.
[18:21:51] eranm: ttyl all
[18:22:13] jleyba: Safari has a nasty habit of keeping DOM references after a new page load.  I'm used to all the quirks with Selenium RC
[18:22:20] FalCone: Webdriver Question:
[18:22:27] jleyba: but the behavior is slightly different with SafariDriver, so I have to figure all these edge cases out again
[18:22:36] FalCone: get a list of all elements with tag name "a" 
[18:22:48] FalCone: I wanna navigate to each link in that list, and do some stuff
[18:22:48] jleyba: driver.findElements(By.tagName("a"));
[18:22:53] FalCone: yeah, no yeah.
[18:22:59] FalCone: But can I navigate to the other links
[18:23:04] FalCone: while in the page that I just looked at?
[18:23:16] jleyba: Oh.  after a navigation you're going to get StaleElementReferenceError
[18:23:17] jimevans: FalCone: no easy way. the minute you navigate, all the links you just found are stale.
[18:23:31] jleyba: FalCone: get the list, extract the link from each, then do your navigation
[18:23:32] FalCone: So I should loop through and extract their srcs and nagivate to those?
[18:23:38] FalCone: Yeah.
[18:23:54] FalCone: Hmm.
[18:24:28] jleyba: Just remember WebElement is a reference to a DOM node.  You navigate, that DOM nodes goes away and your WebElement becomes stale
[18:24:45] FalCone: Yeah, got'cha.
[18:25:00] FalCone: So if I want to go down the line I have to find out where I'm going ahead of time.
[18:25:08] jleyba: Yup
[18:25:55] kallisti: jimevans: it's almost like translating from weak typing to strong. fun times.
[18:26:18] jimevans: kallisti: alright.
[18:27:45] kallisti: does anyone know of other corner cases involving "no return value" responses. so far there's empty object, null, and 204 No Content
[18:27:58] kallisti: or rather {status: 0, value: null} and {status: 0, value: {}}
[18:28:08] davehunt_: dawagner: looks like the Jenkins IDE job is failing to check out the repo
[18:28:09] davehunt_: http://ci.seleniumhq.org:8080/job/IDE
[18:30:15] jleyba: Oh interesting.  Safari doesn't give the end user access to an extension's global page like Chrome does
[18:30:18] simonstewart: kallisti: check what we do when an alert opens
[18:30:45] jleyba: simonstewart: that's a nasty edge case on an error object
[18:30:53] jimevans: jarib: you around?
[18:30:59] simonstewart: jleyba: yes it is
[18:31:04] jarib: jimevans: i am
[18:31:35] jimevans: i'm wanting to change up the behavior of the visual c++ rake tasks, but i need a little guidance.
[18:31:48] jarib: ok
[18:31:54] plightbo_ has joined #selenium
[18:32:27] jimevans: currently we create an msbuild albacore task, and execute it. but if it fails, i want to do something other than just fail the build (specifically, copy prebuilts).
[18:32:44] jimevans: will a try-rescue work there? or is there another mechanism i should use?
[18:33:46] jleyba: simonstewart: Does NewCrazyFun reparse the build.desc files on each invocation?
[18:33:53] selbot2: 03james.h.evans.jr@gmail.com less than 10 seconds ago - JimEvans: Removing inadvertently committed .NET IE-specific test. | https://code.google.com/p/selenium/source/detail?r=18245 | http://seleniumhq.org/ci.jsp?r=18245
[18:33:54] simonstewart: Right now, yes
[18:34:01] simonstewart: I plan on hooking in NailGun at some ponit
[18:34:02] simonstewart: point
[18:34:03] kallisti: simonstewart: hm?
[18:34:09] kallisti: where?
[18:34:10] jarib: jimevans:  that depends, how do you invoke the albacore task?
[18:34:23] simonstewart: And only reparsing when the build.desc has been modified since being read
[18:35:14] simonstewart: http://www.martiansoftware.com/nailgun/
[18:36:23] jimevans: jarib: crazy-fun does the invocation, the handle() method just creates the task.
[18:37:03] jimevans: the relevant code is at http://code.google.com/p/selenium/source/browse/trunk/rake-tasks/crazy_fun/mappings/visualstudio.rb#611
[18:37:58] jarib: yeah, begin-rescue won't help you here
[18:38:12] jarib: since it just sets up the task chain
[18:38:17] FalCone: hurrr
[18:38:22] FalCone: I said "src" looking for links
[18:38:25] jimevans: jarib: yeah, didn't think it would.
[18:38:25] FalCone: I meant hrefs
[18:39:53] jarib: jimevans: i'm really sure how to do what you want
[18:39:58] jarib: uh
[18:40:08] jarib: i'm *not* really sure how to do what you want
[18:40:20] simonstewart has joined #selenium
[18:40:27] jimevans: i'm not either. :)
[18:42:01] jimevans: my problem is that right now, the firefox native events dll builds are broken. i can't run the .net tests because they depend on the java standalone test .jar task (because we need the web server to serve up the test files), and it, in turn, depends on the firefox native events dll tasks (among others).
[18:42:34] jimevans: there are prebuilt versions of the firefox dlls checked in, so i'd like to use them if (and only if) the build of them fails)
[18:43:37] jarib: i can't think of anything besides writing your own task that does the equivalent of msbuild but with the fallback
[18:44:01] jimevans: bleah. alright. what must be, must be.
[18:45:04] *jimevans notes that he doesn't believe this would be a problem with Marionette. :)
[18:46:30] dawagner: New crazy fun on my machine builds the standalone selenium jar in 40 seconds.
[18:46:37] plightbo has joined #selenium
[18:46:48] admc has joined #selenium
[18:46:48] dawagner: Looking forward to switching over :D
[18:46:59] simonstewart: Which is very cool :)
[18:47:01] jarib: jimevans: hmm, or does msbuild! actually execute the build?
[18:47:07] jarib: if so, the rescue may work
[18:47:49] dawagner has left #selenium
[18:52:41] jimevans: jarib: apparently, 'msbuild!' is intended to do just that. it was changed to that syntax in r13102
[18:52:44] selbot2: 03james.h.evans.jr@gmail.com about 1 year ago - JimEvans: Cosmetic style changes to .NET crazy fun build mapping file. | https://code.google.com/p/selenium/source/detail?r=13102 | http://seleniumhq.org/ci.jsp?r=13102
[18:52:52] Swadq has joined #selenium
[18:54:30] jarib: jimevans: then i'd give the rescue a shot
[18:58:35] jimevans: jarib: that looks like it worked.
[18:58:48] jarib: great
[IRC logfile - Started Mon Dec  3 19:03:20 2012]
[19:03:20] dude-x has joined #selenium
[19:06:25] assertselenium has joined #selenium
[19:07:36] assertselenium: Selenium users, I welcome all to pls subscribe to my blog at https://assertselenium.com and Like my page in Facebook https://www.facebook.com/AssertSelenium
[19:08:09] sassda: hey guys, have anyone experienced some pbs with clicking in IE9? basically for me, it doesn't click :D, using javscript bindings
[19:08:20] assertselenium: Need some more members to keep me encouraged and engaged.
[19:09:37] plightbo_ has joined #selenium
[19:10:03] RossPatterson: assertselenium: Failure #1: HTTPS with a bad certificate.
[19:10:05] selbot2: 03michael.tamm2 closed/fixed NumberFormatException inside FirefoxWebElement.getSize() - https://code.google.com/p/selenium/issues/detail?id=1 [Type-Defect Priority-Medium]
[19:10:16] jimevans: hmm… https, with a bad cert? no thanks.
[19:12:04] RossPatterson: assertselenium: Failure #2: Flogging a blog with only 10 posts.
[19:12:06] selbot2: 03dawagner@gmail.com closed/fixed DOCS: Typo in PageFactory documentation - https://code.google.com/p/selenium/issues/detail?id=2 [Type-Defect]
[19:12:18] simonstewart: be gentle, chaps
[19:12:42] assertselenium: Ross, its just a startup Didnt know the reason for your aggressive comments.
[19:12:50] *lukeis remembers recent history being trolled to death about https and a certain site
[19:13:02] RossPatterson: assertselenium: Don't let my opinions tell you to stop.  Just keep building it up, and occasionally answer questions on selenium-users (like Ardesco does).  Readers will come along.
[19:13:07] *RossPatterson hangs his head in shame
[19:13:41] assertselenium: Though its a start up with 10 posts..its one of the blogs that recently Michael Wowro listed.
[19:13:52] assertselenium: happy to see that there.
[19:14:57] assertselenium: https is my bad just typed them the way I use other Url's  my work place habit. #apologies - Just http://assertselenium.com/
[19:14:58] assertselenium: qill do
[19:15:02] assertselenium: will*
[19:15:09] adamgoucher has joined #selenium
[19:15:19] RossPatterson: And I'll try to be nicer to the drive-bys in the future.
[19:15:27] assertselenium: Thanks Simon .
[19:15:34] simonstewart: np
[19:15:49] assertselenium: thanks for adam for listing my blog in the Smattering #128 posts. Happy to see that there.
[19:16:02] stan has joined #selenium
[19:17:32] assertselenium: using selenium for more than.... 3 + years now. have been a silent observer....
[19:17:59] RossPatterson: Again, really sorry for the smack-down.
[19:18:00] assertselenium: I hope Simon remembers the post at selenium-users group regarding the "Selenium Skills definiteion and accreditation "
[19:18:18] assertselenium: it was long back... started by me... :)
[19:18:25] simonstewart: I get an awful lot of email :)
[19:18:46] RossPatterson: It's a knee-jerk reaction to handles that imply knowledge of Selenium, and PLEASE LIKE MY BLOG pokes.  A bad reaction on my part.
[19:19:05] assertselenium: np Ross. Glad you realized.
[19:20:08] assertselenium: it was actually kind of getting in more readers that will ll help me writing more posts and encouraging too....:) 
[19:20:41] assertselenium: Simon, yeah you a busy bee....might have more things.. 
[19:21:10] *simonstewart watches intellij configure itself
[19:21:43] simonstewart: Why would Google Quick Search Box be spiking 58% CPU usage?
[19:22:22] RossPatterson: Ah, THAT conversation (https://groups.google.com/forum/?fromgroups=#!topic/selenium-users/Fbs4VbtWSY0).  Things got kind of hot there for a while last summer.
[19:22:55] simonstewart: I steered clear of it, by the look of things
[19:23:33] simonstewart: I have to say that I agree with Paul Hammant
[19:23:38] simonstewart: The lad speaks sense
[19:23:48] assertselenium: @ardesco exactly... it was way back...things are fast....
[19:24:05] *simonstewart tuning out to focus on work. Mention my name to summon me back if I'm needed
[19:24:13] kallisti: there we go. fixed the issue with chromedriver.
[19:26:28] rbalent has joined #selenium
[19:30:36] knorrium: hey guys, when implementing the json wire and sending the 501 Not Implemented error, should we just send the 501 code or should we also add a message and set the content type to application/json?
[19:31:23] knorrium: http://code.google.com/p/selenium/wiki/JsonWireProtocol#Responses mentions only the 501 code, but when testing the spec with ruby, it expects the content type to always be application/json https://github.com/jarib/selenium-travis/blob/master/selenium-webdriver/lib/selenium/webdriver/remote/http/common.rb#L7
[19:33:40] lukeis: python expects json too
[19:33:41] assertselenium: Have a good day ahead. Signing off now...
[19:34:02] lukeis: if you want to show a message
[19:35:24] knorrium: from what i understand ruby is expecting only json and would fail when you return text/plain for the 40x responses
[19:35:28] knorrium: is python that strict too?
[19:35:37] AutomatedTester: knorrium: https://code.google.com/p/selenium/source/browse/trunk/py/selenium/webdriver/remote/remote_connection.py#341
[19:35:41] AutomatedTester: thats the python cod
[19:35:44] AutomatedTester: code even
[19:35:56] *AutomatedTester just happened to have that in his paste buffer :)
[19:36:12] knorrium: oh
[19:36:39] knorrium: no sign of text/plain there either
[19:36:49] AutomatedTester: knorrium: just out of curiosity, what you doing :)
[19:37:09] knorrium: i'm implementing the json protocol to automate windows 8 winjs apps
[19:37:19] AutomatedTester: knorrium: ahh
[19:37:46] AutomatedTester: are winjs apps essentially IEHTA?
[19:38:24] knorrium: AutomatedTester: i was validating the implementation using wd, python and ruby :)
[19:39:19] knorrium: AutomatedTester: i'm not sure about iehta
[19:39:30] knorrium: but some apis are available only in metro, not in ie10
[19:39:35] knorrium: if that's what you were asking :P
[19:39:39] AutomatedTester: kinda
[19:39:52] AutomatedTester: is it IE but by another name was more my question
[19:39:54] AutomatedTester: :)
[19:40:10] knorrium: it runs the ie10 engine, yes
[19:40:19] AutomatedTester: i guess its all on top of trident
[19:40:28] knorrium: chakra i think
[19:41:02] jimevans: chakra is the javascript engine, most likely. the rendering engine is probably trident, though i don't know for sure.
[19:41:22] AutomatedTester: trident has been around for eons
[19:41:35] knorrium: i'm not familiar with all those engines :P
[19:41:37] jimevans: indeed it has
[19:41:38] AutomatedTester: and from speaking to a chap at MS, its not going anywhere soon
[19:44:44] icio has joined #selenium
[19:44:45] knorrium: we are not using the atoms yet (sorry about that, jimevans), as it was supposed to be just a proof of concept
[19:45:03] knorrium: but it's progressing nicely :)
[19:47:27] *jimevans wonders why he would care whether knorrium is using the atoms or not
[19:47:57] jimevans: though for a new driver, i would say use of the atoms is a "best practice" if possible.
[19:48:37] plightbo has joined #selenium
[19:51:54] knorrium: jimevans: i was just referencing your presentation from seconf
[19:52:14] jimevans: yep, hence my "best practice" comment.
[19:52:40] *jimevans is a huge believer in not reinventing the wheel when he doesn't have to.
[19:53:15] AutomatedTester: except if there is a more idiomatic version
[19:53:28] AutomatedTester: e.g. Marionette typing doesnt use an atom
[19:54:12] kallisti: 14:53  * AutomatedTester just happened to have that in his paste buffer :)
[19:54:16] kallisti: AutomatedTester: you're welcome. ;)
[19:54:23] AutomatedTester: ;)
[19:58:25] jimevans: AutomatedTester: IE typing doesn't use one either (if you're using native events)
[19:58:52] AutomatedTester: jimevans: we arent doing "native events"
[19:59:05] AutomatedTester: but it uses XPCOM
[19:59:37] kallisti: AutomatedTester: the branch in _request that handles image/png could probably also handle text/plain without any problems.
[19:59:52] kallisti: oh wait, nevermind. 
[19:59:56] jimevans: does that shove "events" (deliberately in quotes) into the event queue of the browser?
[IRC logfile - Started Mon Dec  3 20:00:11 2012]
[20:00:11] *jimevans is too lazy to seek out the code and find out for himself.
[20:01:04] AutomatedTester: jimevans: yea but not all the events are fired properly so I have to add things in
[20:01:23] kallisti: AutomatedTester: are the calls to response.read() referentially transparent?
[20:01:37] kallisti: AutomatedTester: or is it a stateful action?
[20:02:22] jimevans: AutomatedTester: well, that's close enough to "native" for me. as long as you're in a privileged position and can trigger things like, say, :hover, i'm good. :)
[20:02:46] AutomatedTester: when I do more native then it will come via our built in widgets and then injects into event queues. I have some thing in there from https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIDOMWindowUtils but not the really native stuff
[20:03:23] jimevans: i have every confidence you'll get there in good time.
[20:03:40] AutomatedTester: kallisti: I dont understand the question
[20:03:50] AutomatedTester: https://code.google.com/p/selenium/source/browse/trunk/py/selenium/webdriver/remote/remote_connection.py#385
[20:04:07] kallisti: AutomatedTester: in _request there are multiple calls to response.body(), do these calls return the same value or is it "reading forward" similar to a file?
[20:04:19] kallisti: er response.read()
[20:04:56] AutomatedTester: kallisti: there are 2 calls
[20:04:59] kallisti: yes
[20:05:04] AutomatedTester: and they are in different paths
[20:05:13] kallisti: not quite. they overlap.
[20:05:18] kallisti: oh wait
[20:05:20] kallisti: >_> nevermind
[20:05:34] kallisti: too much Haskell. I forgot what return means. :P
[20:05:45] AutomatedTester: return means... return
[20:05:47] AutomatedTester: :P
[20:06:09] kallisti: so if I read the code correctly, it should handle text/plain responses correctly on 5xx status codes
[20:06:51] kallisti: (which is relevant to knorrium's question)
[20:07:15] AutomatedTester: yea, it would appear to ignore it
[20:07:35] kallisti: oh nevermind, it only does text/plain correctly for 4xx
[20:08:23] stackedsax1 has joined #selenium
[20:08:24] kallisti: (I can't read Python, or follow simple conditional statements, apparently. :P)
[20:08:54] AutomatedTester: dont worry, I struggle reading code a lot of the time
[20:13:37] knorrium: well, thanks for the links 
[20:13:42] kallisti: my issue tracker is now down to 0 open issues. Today is a good day.
[20:14:10] kallisti: (granted there are only 7 issues total. :P )
[20:14:59] kallisti: So either my code is nearly flawless or there's not a large enough userbase to expose all of the bugs. I wonder which is more likely.
[20:20:09] AutomatedTester: :spec
[20:20:10] selbot2: http://dvcs.w3.org/hg/webdriver/raw-file/tip/webdriver-spec.html | http://dvcs.w3.org/hg/webdriver/
[20:22:09] plightbo has joined #selenium
[20:24:11] FalCone: Anyone have any hints about setting a timeout for webdriver loads in python?
[20:24:20] FalCone: It's just sitting there waiting for stuff :|
[20:24:29] zeljkof has joined #selenium
[20:24:34] llaskin: oh?
[20:24:37] llaskin: :gist soe code
[20:24:38] kallisti: AutomatedTester: -shudders- it's so... object-oriented. :P
[20:24:38] selbot2: Please paste >3 lines of text to https://gist.github.com
[20:24:49] rpereira_ has joined #selenium
[20:25:02] AutomatedTester: FalCone: your CDN being slow?
[20:25:13] FalCone: Nah, nothing of mine.
[20:25:32] FalCone: I'm loading commonly visited pages, and ad assets or something is taking a while to load
[20:25:37] FalCone: after the page's content.
[20:25:58] AutomatedTester: ads/CDNs are very bad for loading content
[20:26:03] llaskin: yes they are
[20:26:13] FalCone: Yeah, but I can't really do much about it, can I? :|
[20:26:28] FalCone: If I'm just doing website scraping and DOM traversal
[20:27:08] AutomatedTester: well you could use our experimental loading strategy
[20:27:21] FalCone: "Experimental" 
[20:27:22] FalCone: Uh oh
[20:28:09] AutomatedTester: :wiki LoadingStrategy
[20:28:12] selbot2: No results.
[20:28:22] AutomatedTester: *sigh* Google is so crap for searching
[20:28:30] AutomatedTester: :wiki loading strategy
[20:28:32] selbot2: 1: 03DesiredCapabilities: (still under work) A specification of DesiredCapabilities and their content when used in JsonWireProtocol - https://code.google.com/p/selenium/wiki/DesiredCapabilities
[20:28:33] selbot2: 2: 03FrequentlyAskedQuestions: WebDriver FAQs - https://code.google.com/p/selenium/wiki/FrequentlyAskedQuestions
[20:28:39] llaskin: its....experimental
[20:29:19] kallisti: AutomatedTester: are page load strategies currently a thing or is this an upcoming feature?
[20:30:28] AutomatedTester: simonstewart: plightbo: do you know about http://www.seleniumwebdriver.com/
[20:31:10] AutomatedTester: kallisti: its an unknown
[20:31:26] kallisti: AutomatedTester: so it's just a thing in this spec.
[20:31:30] kallisti: and nowhere else currently
[20:31:38] AutomatedTester: its implemented
[20:32:13] AutomatedTester: FalCone: firefoxProfile.set_preference("webdriver.load.strategy", "fast"); 
[20:32:16] AutomatedTester: I *think*
[20:32:22] kallisti: oh. okay.
[20:32:27] FalCone: Uh, chromedriver on python :ohdear:
[20:32:35] dude-x has joined #selenium
[20:32:51] kallisti: FalCone: what about it?
[20:32:57] kallisti: AutomatedTester: so it's firefox only right now?
[20:33:03] AutomatedTester: I *think* so
[20:33:10] FalCone: Would that be okay?
[20:33:26] AutomatedTester: FalCone: I think its only in Firefox
[20:33:31] AutomatedTester: I dont know about Chrome
[20:33:32] FalCone: I mean, if it's firefox only, It doesn't do much for me 
[20:33:38] FalCone: yeah. Hahah.
[20:33:48] kallisti: AutomatedTester: seeing as how there's no way to set preferences for chrome, I doubt it exists.
[20:33:53] kallisti: unless it's a non-standard capabilities thing I'm unaware of
[20:34:28] AutomatedTester: you could try add it to your desired capabilities
[20:34:33] AutomatedTester: and see if it works
[20:34:49] kallisti: ha
[20:34:55] AutomatedTester: FalCone: are you searching for webkit specific things?
[20:35:01] kallisti: FalCone: there's always http://seleniumhq.org/docs/04_webdriver_advanced.html#explicit-and-implicit-waits
[20:35:13] FalCone: I'm  just parsing DOM elements and frame contents 
[20:35:32] FalCone: woah what
[20:35:48] AutomatedTester: kallisti: the problem is the page is blocking the load
[20:36:01] kallisti: oh okay.
[20:39:01] kallisti: I should probably add a field to my capabilities record to support non-standard capabilities.
[20:40:14] kallisti: basically a hash map that you can pass in
[20:40:17] FalCone: Jeesh, it's happening on every load on cnn.com, hahah.
[20:40:35] FalCone: is stop a supported method?
[20:40:36] FalCone: :V
[20:41:30] plightbo: AutomatedTester: wow, I wasn't aware of that. Lame :(
[20:41:37] kallisti: FalCone: there's a "set page load timeout"
[20:41:47] kallisti: but I don't know which language bindings support it.
[20:41:52] AutomatedTester: plightbo: they are getting ad money off that site
[20:42:33] FalCone: Yeah.
[20:42:46] plightbo: AutomatedTester: yeah, boo.... though that speaks for a need. We shut down our forums, but perhaps we should consider reviving. Not sure we need StackOverflow/Q&A, email, and forums, but perhaps we need 2 of the 3
[20:43:23] AutomatedTester: stackoverflow people think Selenium is a testing tool and dont want to give us our own stack exchange
[20:43:24] kallisti: FalCone: yeah I can reproduce your problem on my laptop.
[20:43:31] simonstewart: AutomatedTester: nope
[20:43:32] FalCone: Yeah
[20:43:37] plightbo_ has joined #selenium
[20:43:38] AutomatedTester: spolsky and atwoods are morons...
[20:43:51] rbalent has joined #selenium
[20:43:51] rbalent has joined #selenium
[20:44:05] kallisti: FalCone: looks like firefox completely freezes
[20:44:22] plightbo: AutomatedTester: that's ok. we can also just use StackOverflow (w/o a direct site)
[20:44:38] smccarthy2 has joined #selenium
[20:44:54] lukeis: that's currently being done
[20:45:19] FalCone: kallisti: I'm just rolling on chrome and it's just hanging there loading that asset.
[20:45:26] FalCone: So if I do a .get I'll be sitting there 
[20:45:40] plightbo: lukeis: was your comment directed to me?
[20:45:49] kallisti: FalCone: I attempted to use setPageLoadTimeout in the (third-party) Haskell bindings and that did not fix the problem, so that won't help.
[20:46:06] FalCone: Yeah, I was going to give it a shot with Python bindings
[20:46:09] kallisti: runSession def def $ do { setPageLoadTimeout 5000; openPage "http://cnn.com" }
[20:46:10] kallisti: does not work
[20:46:59] kallisti: oh it looks like pyton has set_page_load_timeout now. last time I checked it wasn't there yet.
[20:47:26] FalCone: Where's the docs for that? I'm trying to find it :P
[20:47:43] AutomatedTester: :apidocs
[20:47:44] selbot2: .NET: http://goo.gl/Fm3cw | Java: http://goo.gl/kKQqM | Ruby: http://goo.gl/cFyyT | Python: http://goo.gl/5yWoR
[20:47:53] FalCone: Mhm.
[20:48:07] lukeis: plightbo: yes
[20:48:11] kallisti: funnily enough, "where are the Python API docs"  is one of the highest rated selenium questions on stack overflow
[20:48:30] FalCone: Hahahah.
[20:48:36] kallisti: so you're not alone.
[20:49:00] AutomatedTester: kallisti: yea, because looking at where the code is stored is a bad place to look
[20:49:05] AutomatedTester: and unintuitive
[20:49:18] llaskin: any way to set seleniumwebdriver to spit out more debug data, like what it's currently doing?  I'm finding mine is sticking sometimes, and I can't figure out why it's sticking.
[20:49:22] plightbo: lukeis: if we like doing that, we could promote it more on the website
[20:49:31] kallisti: AutomatedTester: it's probably because it's not the first hit for various google searches
[20:50:24] kallisti: or wasn't
[20:50:40] plightbo: similar to this: http://www.playframework.org/community (upper right corner)
[20:50:42] FalCone: Huh. Uh oh
[20:50:51] FalCone: set_page_load_timeout(20) is making me crash :V
[20:50:57] jeichar has joined #selenium
[20:51:05] kallisti: FalCone: what kind of crash? any useful error messages?
[20:51:24] FalCone: Uh. 
[20:52:15] FalCone: Looks like it's raising an exception
[20:52:26] FalCone: http://pastebin.com/t682qRgr 
[20:52:28] FalCone: *shrug*
[20:53:28] lukeis: plightbo: i agree… would just need a magical link to be the search results for our 'blessed' tags (like webdriver / selenium / selenium2 / etc…)
[20:54:11] *lukeis sorry, i'm in and out of being able to pay attention to irc… gonna go grab lunch now
[20:54:48] kallisti: FalCone: either chromedriver does not support that command or it is incorrectly implemented in the python bindings. probably the first one.
[20:55:03] FalCone: status 405? 
[20:55:13] FalCone: Egh.
[20:55:41] kallisti: Invalid Command Method If a request path maps to a valid resource, but that resource does not respond to the request method, the server should respond with a 405 Method Not Allowed. The response must include an Allows header with a list of the allowed methods for the requested resource. 
[20:56:09] kallisti: as far as I can tell the python implementation is correct.
[20:56:17] FalCone: I wouldn't know :P
[20:57:30] FalCone: how recently was that implemented?
[20:57:44] kallisti: "recently"
[20:58:09] kallisti: I just tried to use it in Haskell bindings with chrome with a similar exception.
[20:58:12] FalCone: Uh.
[20:58:26] kallisti: FalCone: it's new to the standard.
[20:58:29] kallisti: relatively speaking
[20:58:45] kallisti: so it's likely that it hasn't been implemented by chromedriver, which is a project outside of the scope of Selenium.
[20:58:58] FalCone: Probably worth an update, then.
[20:59:02] kallisti: indeed
[20:59:14] kallisti: sheesh. I can keep up with this stuff, and I'm only one person. :P
[20:59:22] kallisti: isn't chromedriver from Google?
[20:59:44] FalCone: I think so
[20:59:49] simonstewart: yes it is
[20:59:53] simonstewart: Or rather, from the chrome team
[20:59:58] kallisti: right
[IRC logfile - Started Mon Dec  3 21:00:00 2012]
[21:00:00] simonstewart: A large number of whom are googlers
[21:00:05] *jimevans was about to get pedantic
[21:00:23] *simonstewart is aware that precision matters
[21:00:27] danqa has joined #selenium
[21:00:27] simonstewart: sometimes :)
[21:00:41] AutomatedTester: jimevans: I saw you get out the pedantic stick out
[21:00:42] jimevans: btw, simonstewart, it's good to have you back in the channel, at least semi-regularly.
[21:00:56] simonstewart: It's good to be back
[21:01:03] simonstewart: I missed this place
[21:01:12] *AutomatedTester liked it before simonstewart came back
[21:01:19] simonstewart: Now, if only TempJavaCrazyFun actually worked :)
[21:01:19] AutomatedTester: we could wave pitchforks
[21:01:30] simonstewart: You can still wave them. Now I get to see them
[21:01:37] AutomatedTester: :D
[21:01:48] adamgoucher has joined #selenium
[21:01:56] jimevans: i think the pitchforks are starting to feel normal to plightbo
[21:01:57] plightbo: :)
[21:02:18] AutomatedTester: simonstewart: I heard a rumour that Facebook has made big fixes to HG
[21:02:31] simonstewart: Has it? That's nice
[21:02:40] AutomatedTester: 2.5x speed improvements apparently
[21:02:51] AutomatedTester: thats hawt
[21:03:04] simonstewart: Where did you read that?
[21:03:11] plightbo: Facebook is annoying me in my day job, btw. The stupid PHP-to-C compiler (HipHop) makes life difficult at New Relic
[21:03:19] simonstewart: How so?
[21:03:38] plightbo: because instrumenting HipHop apps is a whole different thing than instrumenting vanilla PHP
[21:03:46] simonstewart: https://www.facebook.com/note.php?note_id=10150415177928920
[21:03:51] simonstewart: You might find that interesting
[21:04:02] plightbo: as if Ruby, Python, Java, .NET, PHP, and Node wasn't enough
[21:04:10] AutomatedTester: simonstewart: saw it in chat channel
[21:04:27] simonstewart: nice
[21:04:52] plightbo: simonstewart: HipHop is fine and nice, it's just One More Thing
[21:05:00] plightbo: I'm equally annoyed with JRuby, Jython, etc :P
[21:05:10] simonstewart: If only everything sat on the jvm
[21:05:13] AutomatedTester: plightbo: you got into the game of instrumenting the world
[21:05:31] plightbo: my preference would be that technology stopped evolving and getting better, then my job would be easy!
[21:05:49] plightbo: simonstewart: my life would be glorious if 100% of apps deployed on the JVM
[21:05:50] kallisti: 16:22 < simonstewart> If only everything sat on the jvm
[21:05:53] kallisti: simonstewart: welcome to my nightmares
[21:06:00] plightbo: the jvm is wonderful!
[21:06:11] *AutomatedTester is glad that things don't sit on the jvm
[21:06:23] kallisti: in terms of performance, the jvm is great.
[21:09:23] simonstewart: So other than a knee-jerk dislike of anything with "java" in the name, what's the beef with the jvm?
[21:10:14] kallisti: simonstewart: nothing. I just do not think it is appropriate as a "universal platform for all things"
[21:10:45] plightbo: kallisti: what about x86? :)
[21:11:15] plightbo: or the linux kernel?
[21:11:23] plightbo: isn't it all about levels of abstraction at the end of the day?
[21:11:27] kallisti: x86 is in the same boat as jvm for that.
[21:11:49] simonstewart: What about a Turing Machine?
[21:11:59] plightbo: only if it can play Quake 4
[21:12:00] kallisti: linux is an orange. we were talking about apples.
[21:12:11] plightbo: Darwin?
[21:12:16] kallisti: simonstewart: also not good. some things port better to lambda calculus. :P
[21:12:16] danqa has joined #selenium
[21:12:28] simonstewart: plightbo: there are loads of turing machines out there that can play quake4
[21:13:21] kallisti: I was going to say that JVM is bad for functional languages, but then I guess there's Clojure.
[21:13:24] plightbo: simonstewart: not this one :) http://vimeo.com/44202270
[21:13:39] simonstewart: And Scala
[21:13:43] simonstewart: And Scheme
[21:13:43] kallisti: yes
[21:13:47] alexglow has joined #selenium
[21:13:48] simonstewart: And JS
[21:13:48] kallisti: Scheme targets JVM?
[21:13:58] kallisti: okay now you've lost me. :P
[21:14:10] simonstewart: http://sisc-scheme.org/
[21:14:18] simonstewart: The last update was… a while ago
[21:14:38] kallisti: okay, well, JVM is not good for /purely/ functional languages.
[21:14:44] kallisti: but there aren't many of those
[21:15:16] kallisti: granted, x86 isn't a good platform for those either.
[21:15:19] plightbo: what I'm pissed about is that the JVM can't run any of my Befunge apps
[21:16:03] simonstewart: Yes it can
[21:16:04] simonstewart: https://github.com/yaychris/befunge-93 
[21:16:11] simonstewart: Befunge -> Ruby -> JRuby -> JVM
[21:16:16] kallisti: seems legit
[21:16:29] jleyba has joined #selenium
[21:16:37] plightbo: haha
[21:16:44] plightbo: simonstewart: well played :)
[21:16:57] simonstewart: I thank you very much :)
[21:17:08] simonstewart: I had a friend who wrote a befunge -> ruby compiler
[21:17:16] simonstewart: But I can't find the link
[21:17:18] simonstewart: Oh well
[21:17:25] plightbo: Befunge is my favorite Crazy Programming Language
[21:17:32] simonstewart: Java is mine
[21:17:41] plightbo: zing!
[21:17:52] simonstewart: I'm on fire today
[21:18:45] simonstewart: steakers: is it okay to change the date from the 12th to the 13th?
[21:18:50] simonstewart: 13th to the 12th, even?
[21:18:59] nirvdrum has joined #selenium
[21:20:29] jimevans: fine by me. a little better for me, even.
[21:20:52] simonstewart: plightbo, lukeis, hugs_ ? ^^
[21:20:53] plightbo: i probably can't make either of those dates. I'll be in town the 15th & 16th for some family stuff, but won't have much free time
[21:21:06] plightbo: so don't plan around me. if i can change my trip I will
[21:21:52] llaskin: any reason why grab_screenshot method would not work?
[21:22:21] jimevans: i leave during the day on friday the 14th, and that's firm.
[21:22:27] AutomatedTester: llaskin: going through the remotewebdriver?
[21:23:20] FalCone: Huh. Updating the python bindings didn't help. Hmm...
[21:23:36] kallisti: simonstewart: I actually don't think it's feasible to write Haskell -> JVM compiler that doesn't convert any trivial program into a memory leak.
[21:23:39] *jimevans is tempted to add an AsJavaScriptExecutor() method into the .NET IWebDriver interface.
[21:24:05] simonstewart: how so?
[21:26:29] kallisti: simonstewart: oh well maybe not, apparently the hotspot JVM garbage collector is a copying collector for young generations.
[21:26:45] kallisti: but yeah, you'll need to efficiently garbage collect gigabytes of junk data per second.
[21:27:13] FalCone: Is there a way to do a stop in the bindings?
[21:27:32] FalCone: Because then I could just, like, make a thread that waits until a timer goes off and essentially hits the stop button
[21:27:36] lukeis: simonstewart: should work for me (12th)
[21:27:43] kallisti: FalCone: set_page_load_timeout is the only thing I know of that does what you want in this case.
[21:27:54] FalCone: Yeah, but I'm gettin' a crash from it 
[21:29:03] kallisti: I wonder what the root of the problem actually is. Both chromedriver and standalone firefox have issues with cnn.com
[21:30:05] samphippen has joined #selenium
[21:30:09] kallisti: FalCone: any particular reason you need chrome? you might be able to do the fix mentioned by AutomatedTester
[21:30:12] kallisti: changing the page load strategy
[21:30:19] kallisti: in firefox
[21:30:36] FalCone: Well, the issue is
[21:30:43] FalCone: my firefox take_screenshot doesn't render flash objects
[21:30:48] FalCone: but my chrome does.
[21:30:58] kallisti: ah
[21:31:14] FalCone: So I'm kinda leaning towards chrome, after trying to find a fix and not really getting anywhere.
[21:31:29] kallisti: opera? :D
[21:31:50] FalCone: Hahah. I'm trying to avoid installing anything more. I'm going to be running this stuff on a server
[21:32:02] AutomatedTester: yea, Firefox pushes the DOM to canvas and then gets a base64 image back
[21:33:12] kallisti: FalCone: uninstall chrome. install opera. now it's a fair trade.
[21:33:25] kallisti: does your server have more than a few MBs of disk space? :P
[21:33:32] kallisti: should be able to store both.
[21:33:43] FalCone: That's not the issue, as long as Opera will do the same thing
[21:34:56] kallisti: if all else fails, you could also use a screen capture program (such as scrot)
[21:35:03] kallisti: and just run that to do the screen capture.
[21:36:59] FalCone: Yeah, but I'm running on a server with no GNOME or anything installed, so I'm not sure how that'll work with the xvfbwrapper I'm using D"
[21:37:01] FalCone: D:*
[21:37:22] kallisti: should work
[21:37:46] FalCone: Installing it on my local machine right now
[21:38:25] FalCone: and I think all I need to do is just change "Chrome" to "opera"
[21:38:25] dude-x: this is a bummer, my local postgres server is not starting up anymore :/
[21:38:33] kallisti: FalCone: xvfb still renders everything, it just does it on a virtual framebuffer
[21:38:37] kallisti: so you can still screencapture it.
[21:38:49] FalCone: copy that.
[21:39:50] FalCone: Uh
[21:39:57] FalCone: is there an operadriver I need to download?
[21:40:55] FalCone: It's saying it wants an executable path. Is it asking where Opera is? .___.
[21:41:11] AutomatedTester: FalCone: put selenium server jar in the executable patch
[21:41:15] AutomatedTester: path even
[21:41:19] jcarr has left #selenium
[21:41:21] FalCone: Ah.
[21:46:03] dude-x: solved it: postmaster.pid left over from a prior reboot :/
[21:46:04] simonstewart_ has joined #selenium
[21:49:48] awilson820 has joined #selenium
[IRC logfile - Started Mon Dec  3 22:02:08 2012]
[22:02:08] simonstewart has joined #selenium
[22:02:30] awilson820 has joined #selenium
[22:12:12] gabrielrotbart has joined #selenium
[22:12:44] danqa has joined #selenium
[22:16:22] plightbo has joined #selenium
[22:20:23] AutomatedTester: :cla
[22:20:24] selbot2: http://goo.gl/qC50R
[22:20:27] danqa has joined #selenium
[22:20:59] AutomatedTester: simonstewart: is ^ the new CLA?
[22:21:16] simonstewart: Yup
[22:21:29] simonstewart: Same form as the old one
[22:21:36] simonstewart: Just simple text
[22:21:40] simonstewart: simpler
[22:22:17] lukeis: you going to write something so we (committers) can check that someone has signed it? (without all the gory details)
[22:22:23] lukeis: :)
[22:22:35] AutomatedTester: +1
[22:23:37] DaveIngram has joined #selenium
[22:26:02] jimevans has left #selenium
[22:26:13] simonstewart: There's PII in there. I'm keeping access down to a minimum
[22:26:24] lukeis: i know
[22:26:27] simonstewart: Though I guess we could allow people to check by email address
[22:26:46] AutomatedTester: thats all I would be after
[22:26:48] lukeis: just want something where i could check by email or name and just says "YES" or "NO" :)
[22:26:53] *AutomatedTester doesnt care about anything else
[22:26:58] lukeis: same here
[22:27:00] simonstewart: k
[22:27:11] simonstewart: I might put something together in my copious free time
[22:27:15] lukeis: ;)
[22:27:27] simonstewart: :gist
[22:27:28] selbot2: Please paste >3 lines of text to https://gist.github.com
[22:27:42] lukeis: aren't you like 5k miles from the wife and kid? you should have LOTS of copious free time
[22:27:49] lukeis: :-D
[22:28:08] AutomatedTester: lukeis: but then coding gets in the way of visiting Molly's 
[22:28:10] AutomatedTester: :)
[22:28:20] lukeis: heh
[22:28:33] simonstewart: I've been working on this:
[22:28:33] simonstewart: https://gist.github.com/4198825
[22:28:47] simonstewart: (Take a look at the output of that time command….)
[22:28:54] simonstewart: And my new job
[22:29:03] lukeis: nice ;)
[22:29:11] AutomatedTester: simonstewart: nice
[22:29:13] simonstewart: From clean
[22:29:16] lukeis: time to go heckle some saucers… bbl
[22:29:31] AutomatedTester: simonstewart: can you add in stdin support next :)
[22:29:53] FalCone: Bah, poop
[22:29:59] FalCone: opera won't render flash 
[22:30:01] FalCone: :<
[22:30:07] bluescreen10 has joined #selenium
[22:30:50] *AutomatedTester shakes his fist at bitrotted patched
[22:32:20] FalCone: Any other alternatives for set_page_load_timeout  not working on chrome? :V
[22:33:01] simonstewart: Next thing will be to get Java CrazyFun to build the selenium_core jar
[22:33:09] simonstewart: Then parser co-processors
[22:33:16] simonstewart: Then aliases
[22:33:26] simonstewart: And the Windows stuff
[22:33:31] FalCone: That sounds uh
[22:33:40] FalCone: like a lotta work 
[22:33:46] simonstewart: Then land into the tree and start the rewrite with sanity
[22:33:52] simonstewart: Aliases are trivial
[22:34:14] simonstewart: The parser co-pros won't be hard
[22:34:26] simonstewart: The empty jars thing is going to cause me headaches for a while
[22:37:13] simonstewart_ has joined #selenium
[22:37:16] detronizator has joined #selenium
[22:38:00] FalCone: I guess I can do the second thread timer thing
[22:38:01] FalCone: Eh.
[22:38:07] simonstewart has joined #selenium
[22:38:36] Osleg has joined #selenium
[22:41:46] gabrielrotbart has joined #selenium
[22:43:24] smccarthy has joined #selenium
[22:46:58] stephend_ has joined #selenium
[22:47:15] danqa has joined #selenium
[22:51:30] AutomatedTester: :apidocs
[22:51:31] selbot2: .NET: http://goo.gl/Fm3cw | Java: http://goo.gl/kKQqM | Ruby: http://goo.gl/cFyyT | Python: http://goo.gl/5yWoR
[22:56:44] AutomatedTester: :downloads
[22:56:45] selbot2: http://seleniumhq.org/download/ and https://code.google.com/p/selenium/downloads/list
[22:59:22] AutomatedTester: Kate Middleton must have really bad morning sickness if she has to stay in hospital for a few days
[IRC logfile - Started Mon Dec  3 23:06:26 2012]
[23:06:26] danqa has left #selenium
[23:07:31] redfive-c2g has joined #selenium
[23:12:05] plightbo has joined #selenium
[23:24:15] detronizator: AutomatedTester: well, sometimes it's also to be safe.
[23:24:32] AutomatedTester: safe from?
[23:25:05] detronizator: safe from worse things: they might not be saying that they fear worse.
[23:25:29] detronizator: usually the first few months are the critical ones, even for births that later on get much better and safer
[23:25:57] AutomatedTester: detronizator: tbh they shouldnt have said she is pregnant
[23:26:40] detronizator: AutomatedTester: I agree, I wonder what is the reasoning behind exposing a woman to the media-stress
[23:26:49] detronizator: right when she does need that the least
[23:27:21] detronizator: your regents are a weird bunch :)
[23:27:51] AutomatedTester: yup
[23:27:58] AutomatedTester: anyway i am off
[23:28:52] detronizator: me too
[23:29:05] detronizator: night night Seleniumers
[23:29:15] detronizator: Selenemers
[23:29:16] detronizator: ?
[23:29:32] detronizator: Selenees?
[23:29:34] detronizator: no idea...
[23:29:36] detronizator: :)
[23:29:38] detronizator: bye
[23:29:46] *lukeis waves
[23:31:50] FalCone: I love how it doesn't even time out and go "I've been looking for this thing for 20 minutes, I'm just gonna stop now"
[23:32:14] FalCone: Chrome, you're such a butthole :|
[23:40:15] redfive-c2g: Is there a requirement that the browser being controlled by the webdriver isn't already running?
[23:40:50] redfive-c2g: I'm seeing a weird shutdown failure in a django app where the attempt to delete a session id is failing with 404
[23:41:05] FalCone: Huh?
[23:41:13] redfive-c2g: It just occured to me that perhaps there is an issue since I already have ffox running.
[23:41:54] redfive-c2g: In the test shut down phase, a call is made to cls.selenium.quit() which results in a request of the following url (which 404s)
[23:42:01] redfive-c2g: http://127.0.0.1:4444/wd/hub/session/1354576020145
[23:42:09] redfive-c2g: The method is DELETE
[23:44:39] redfive-c2g: I'm also suspicious that the server is shutting down before the final message goes through, since it's getting started/stopped via python
[23:49:05] redfive-c2g: Nobody familiar with this one eh? rats
[23:49:25] stackedsax has joined #selenium
[23:53:35] redfive-c2g: ew, it almost looks like the DELETE gets handled to a 204 but then before getting handed back gets converted to a 404
[23:56:11] rbalent has joined #selenium
[23:56:11] rbalent has joined #selenium
[23:57:14] simonstewart_ has joined #selenium
