[IRC logfile - Started Wed Jul  4 00:12:58 2012]
[00:12:58] DarkRift has joined #selenium
[00:14:54] brettporter has joined #selenium
[00:28:13] llaskin has joined #selenium
[00:52:06] Siph0n has joined #selenium
[IRC logfile - Started Wed Jul  4 01:04:16 2012]
[01:04:16] brettporter_ has joined #selenium
[01:14:45] mreedell has joined #selenium
[01:18:46] stackedsax has joined #selenium
[01:34:02] kallisti_ has joined #selenium
[IRC logfile - Started Wed Jul  4 02:01:53 2012]
[02:01:53] xiaoli has joined #selenium
[02:16:06] ian_mac has joined #selenium
[02:20:36] kallisti has joined #selenium
[02:45:14] awilson8201 has joined #selenium
[02:51:06] awilson8201 has left #selenium
[02:59:33] llaskin has joined #selenium
[IRC logfile - Started Wed Jul  4 03:04:33 2012]
[03:04:33] detronizator has joined #selenium
[03:48:09] lrtsys has joined #selenium
[IRC logfile - Started Wed Jul  4 04:09:54 2012]
[04:09:54] ian_mac has joined #selenium
[04:23:00] kskkoontz has joined #selenium
[IRC logfile - Started Wed Jul  4 05:02:05 2012]
[05:02:05] MicronXD has joined #selenium
[05:02:05] MicronXD has left #selenium
[05:16:49] azbyin has joined #selenium
[05:17:14] azbyin: hi all.. Is there a way to dynamically generate test cases?
[05:18:28] azbyin: i have a page with a group of radio buttons (of which one can be selected) and underneath a group of checkboxes (of which one or many can be selected). And finally I have a button that actually sends the selection information to a server to perform some calculations
[05:19:19] azbyin: i have used the selenium flowcontrol plugin to make a loop for a few different combinations and submit to the server (and then check the results div afterwards).
[05:20:22] azbyin: the problem with this is that the entire thing is 1 testcase! I will have to log manually which particular combination is currently being tested throughout the loop. so that I can find out which combo generated a failure (if it happens)
[IRC logfile - Started Wed Jul  4 06:31:03 2012]
[06:31:03] testingb0t has joined #selenium
[06:31:28] testingb0t1 has joined #selenium
[06:34:56] faille has joined #selenium
[06:38:33] jeichar has joined #selenium
[06:44:13] toabctl has joined #selenium
[IRC logfile - Started Wed Jul  4 07:26:44 2012]
[07:26:44] Jackneill has joined #selenium
[07:37:26] Jackneill has joined #selenium
[07:49:21] SamuraiJack has joined #selenium
[IRC logfile - Started Wed Jul  4 08:05:46 2012]
[08:05:46] ArmEagle has joined #selenium
[08:10:21] rbalent has joined #selenium
[08:25:32] sburjan has joined #selenium
[08:31:26] sburjan has joined #selenium
[08:37:00] testingb0t has joined #selenium
[08:38:00] jibay has joined #selenium
[08:39:56] zac_sel has joined #selenium
[08:40:24] benadderson has joined #selenium
[08:41:12] softmanpetro has joined #selenium
[08:44:13] dmachi1 has joined #selenium
[08:51:56] stackedsax has joined #selenium
[IRC logfile - Started Wed Jul  4 09:04:24 2012]
[09:04:24] SamuraiJack has joined #selenium
[09:06:26] g_rotbart has joined #selenium
[09:07:35] pa has joined #selenium
[09:07:35] jezuz has joined #selenium
[09:11:50] pa has joined #selenium
[09:11:50] jezuz has joined #selenium
[09:16:02] robbim02 has joined #selenium
[09:28:02] christian has joined #selenium
[09:28:58] d0x: hi, i like to select all inner Text from all elements accept <a/>'s. Is there a way to do it
[09:31:59] softmanpetro has joined #selenium
[09:32:08] Bebe has joined #selenium
[09:35:04] teodosia has joined #selenium
[09:40:51] bebe_sel: just noticed that ie 8, 9and FF returns as colors RGBA and chrome returns RGB is that expected ?
[09:54:29] testingb0t has joined #selenium
[09:58:14] bebe_sel has joined #selenium
[IRC logfile - Started Wed Jul  4 10:02:23 2012]
[10:02:23] detronizator has joined #selenium
[10:17:33] naeg has joined #selenium
[10:22:21] eranm has joined #selenium
[10:25:38] zac_sel_ has joined #selenium
[10:31:21] Ale has joined #selenium
[10:40:51] Bebe_ has joined #selenium
[10:44:22] selbot2: 03eran.mes@gmail.com half a minute ago - EranMes on behalf of EmmaSoderberg: Documenting additional error codes in the wire protocol. | https://code.google.com/p/selenium/source/detail?r=17318 | http://seleniumhq.org/ci.jsp?r=17318
[10:47:04] SamuraiJack: hi, is it possible to configure the path to IEDriver server in the same way as for Chrome driver?
[10:47:12] SamuraiJack: for chrome it can be done as: System.setProperty("webdriver.chrome.driver", "/path/to/chromedriver");
[IRC logfile - Started Wed Jul  4 11:03:42 2012]
[11:03:42] testingb0t1 has joined #selenium
[11:09:38] riotz has joined #selenium
[11:30:24] AutomatedTester has joined #selenium
[11:32:44] AutomatedTester: hi hi
[11:36:54] barancev: SamuraiJack: use webdriver.ie.driver property fior IE
[11:37:39] detronizator has joined #selenium
[11:38:40] SamuraiJack: barancev: thanks!
[11:50:09] alp82 has joined #selenium
[IRC logfile - Started Wed Jul  4 12:14:37 2012]
[12:14:37] xiaoli has joined #selenium
[12:14:58] softmanpetro: I have a page with some buttons which are directing me to a different site ! can I continue test to the new page ?
[12:15:20] AutomatedTester: softmanpetro: yes, if you want to
[12:16:25] softmanpetro: AutomatedTester... can I come back after and continue the foreach if I want to test all that buttons ? or should I keep in some variable where I arrived with testing and jump over previously tested buttons ?
[12:16:47] AutomatedTester: softmanpetro: you can do whatever you want
[12:16:54] AutomatedTester: I am not sure what you are asking
[12:19:48] softmanpetro: probably after $el->click() and some check done on this new page I will have to $webdriver->get($previousUrlFromWhereIClickedTheButtons) and continue in the foreach loop with the rest of buttons
[12:29:10] c089 has joined #selenium
[12:29:13] benadderson has joined #selenium
[12:30:18] c089: hey guys does anyone know how to override the preferred language settings when using  chromedriver? my approach does not work: http://stackoverflow.com/questions/11289597/
[12:51:03] llaskin has joined #selenium
[12:51:33] Bebe has joined #selenium
[IRC logfile - Started Wed Jul  4 13:07:36 2012]
[13:07:36] c089 has left #selenium
[13:08:50] robbim02 has joined #selenium
[13:14:50] dawagner has joined #selenium
[13:23:28] stackedsax has joined #selenium
[13:31:06] brettporter has joined #selenium
[13:32:43] softmanpetro: AutomatedTester how should I wait for new page to load ?
[13:33:28] bsilverberg has joined #selenium
[13:33:43] AutomatedTester: softmanpetro: wait for an element on the page
[13:34:39] softmanpetro: I play with google webdriver ...  I see no wait methods in the files
[13:34:56] softmanpetro: probably I should get a element and if true or not...
[13:35:28] AutomatedTester: softmanpetro: clicks that load a page wait for the new page normally
[13:41:34] testingb0t has joined #selenium
[13:42:57] ian_mac has joined #selenium
[13:43:19] softmanpetro: I find elements and iterate them, look for a relative button in each element and than I $but->click(), I do $lookfor = $webdriver-> indelement(...) and than I $webdriver->get($url) to return and $el click to reselect same tab... but this does not work exactly as i imagine
[IRC logfile - Started Wed Jul  4 14:06:48 2012]
[14:06:48] kallisti: softmanpetro: if it's a submit button there may be javascript code that's not being executed from the form element.
[14:06:54] kallisti: I had this issue recently
[14:07:02] kallisti: try submit() instead of click()
[14:07:36] softmanpetro: it is executed... I arrive on the second URL but not sure how to came back to same url to continue with next link
[14:07:36] kallisti: I would think that clicking the submit button would activate the form JS, but it seems to be the case that it doesn't work occasionally.
[14:08:20] kallisti: softmanpetro: ah the problem there is that the old $el objects are now stale
[14:08:32] kallisti: and no longer refer to the page you're on.
[14:08:34] softmanpetro: yes
[14:08:37] llaskin has joined #selenium
[14:09:00] softmanpetro: if I webdriver->getUrl I will have probably no reference
[14:09:08] kallisti: ...I should point out that this is information I would have received very quickly had you simply pasted an error message.
[14:10:06] kallisti: softmanpetro: yes, so you need to repoll the elements.
[14:10:22] softmanpetro: I am now prepare a func (url, tab, link) and I will fill a array which I will than execute in a second iteration
[14:10:27] kallisti: unless the back command prevents stale elements.
[14:10:39] softmanpetro:  not sure if i am close to a good solution
[14:10:43] kallisti: softmanpetro: whatever you think is best. ;)
[14:12:27] kallisti: hm, so parent selectors would be really bad for normal CSS usage
[14:12:31] kallisti: but for WebDriver that would be great.
[14:13:09] kallisti: apparently CSS4 supports it
[14:13:17] kallisti: you can specify the subject of a selector using $
[14:13:24] kallisti: $parent > child
[14:16:58] softmanpetro: I will probably do it by recursively call my test with an $i and do the click only if the function $i is greater than the function param ... but I will remembrthe css4 selector $parent > child
[14:17:15] kallisti: oh, uh... that was completely unrelated to what you're doing.
[14:17:27] kallisti: I was looking for a parent selector in CSS.
[14:17:30] kallisti: for something I'm doing.
[14:17:56] kallisti: softmanpetro: just remember that any references to elements are completely invalidated when you move to a different page.
[14:18:10] kallisti: you need to ask for them again using a find_element  call
[14:18:29] softmanpetro: yes.. I am aware on that :)
[14:19:16] Chuckleteeth has joined #selenium
[14:19:18] kallisti: softmanpetro: what are you trying to do exactly?
[14:19:26] kallisti: what's the X to your Y?
[14:20:36] softmanpetro: page -> tabs(activated by click) -> products -> buy links -> payment processator check -> continue with next link
[14:21:11] kallisti: that doesn't really tell me much, since you apparently need a recursive function to do all of that stuff, which sounds pretty simple in nature.
[14:21:18] ian_mac_ has joined #selenium
[14:22:18] kallisti: do you need to click all of the tabs?
[14:22:20] kallisti: some of the tabs?
[14:23:17] kallisti: what happens when you click a tab that causes elements to go stale.
[14:24:44] softmanpetro: clear
[14:24:53] kallisti: ?
[14:25:03] softmanpetro: different situations...
[14:25:09] kallisti: murky.
[14:25:18] softmanpetro: tabs could contain links or no ...
[14:25:37] kallisti: so you're trying to avoid the ones that contain links?
[14:25:46] softmanpetro: nvm I am testing now with recursivity 
[14:25:52] softmanpetro: ;) thx
[14:25:58] kallisti: good luck
[14:26:56] kallisti: softmanpetro: I ask because much of the logic you're trying to implement may already be done for you in the form of a clever selector
[14:27:09] kallisti: it looks like you're grabbing a bunch of elements and then filtering on some condition.
[14:27:49] softmanpetro: some tabs have display:none so even if the firepath select them in Firefox... with webdriver can't access them
[14:27:56] kallisti: okay.
[14:28:10] kallisti: there's is_displayed()  or similar for that.
[14:28:23] kallisti: this is a PHP binding?
[14:28:30] kallisti: if so, then I have no clue what it's called.
[14:28:53] kallisti: softmanpetro: are you trying to avoid the ones with links or not?
[14:29:32] softmanpetro: I try to test all the links including the ones located in the display none tabs
[14:29:54] kallisti: you can't.
[14:29:58] kallisti: but you figured that out I guess.
[14:30:27] kallisti: to do that you'd need to reset their CSS style.
[14:31:44] softmanpetro: I've tried to reset the css with $webdriver->executeScript(,array($elements)) where elements are the tabs
[14:31:59] softmanpetro: but in the script function it looks I've failed somewhere
[14:32:11] kallisti: debugging javascript is lots of fun.
[14:32:11] simonstewart has joined #selenium
[14:32:21] selbot2: 03emmasoderberg@google.com less than 20 seconds ago - Edited wiki page DesiredCapabilities through web user interface. | https://code.google.com/p/selenium/source/detail?r=17319 | http://seleniumhq.org/ci.jsp?r=17319
[14:32:51] softmanpetro: :) yes ... have a look on what I've did http://pastebin.com/NRQT7pRi
[14:33:16] simonstewart: Afternoon all
[14:33:23] selbot2: 03emmasoderberg@google.com less than 20 seconds ago - Edited wiki page DesiredCapabilities through web user interface. | https://code.google.com/p/selenium/source/detail?r=17320 | http://seleniumhq.org/ci.jsp?r=17320
[14:33:36] simonstewart: AutomatedTester are you looking at the edits that need to be made to the TR.html doc?
[14:33:39] simonstewart: I can pick it up now
[14:33:59] AutomatedTester: simonstewart: I am just finishing off day job stuff
[14:34:04] simonstewart: k
[14:34:05] AutomatedTester: and was going to look later
[14:34:22] kallisti: softmanpetro: what is $elements
[14:34:32] kallisti: and why do you call array() on it.
[14:34:36] *kallisti is bad at PHP
[14:34:43] simonstewart: I'm having a look now
[14:34:57] AutomatedTester: simonstewart: trying to get a first example of marionette moving seamlessly between chrome and content in a test
[14:35:35] simonstewart: ohhhh... shiny
[14:35:41] simonstewart: I just have a selenium update to work through
[14:35:45] simonstewart: Far less fun
[14:36:43] softmanpetro: SHOULD BE CALLED ONLY AS $webdriver->executeScript('var elements = arguments[0];for (var i=0; i<elements.length; i++){...',$elements) ? kalis
[14:36:59] softmanpetro: kalisti ^
[14:37:17] kallisti: softmanpetro: no, I'm just not sure what the purpose of the array() call is. presumably $elements is already an array?
[14:37:23] kallisti: again, no real experience with PHP
[14:37:28] softmanpetro: yes it is
[14:37:43] softmanpetro: the array of all tabs including the display:none for some of them
[14:37:54] kallisti: softmanpetro: which bindings are these?
[14:38:04] kallisti: it doesn't look like the Facebook ones, at least.
[14:38:07] softmanpetro: google php-webdriver-bindings
[14:41:09] kallisti: I asked because there are like 6 PHP bindings.
[14:41:40] kallisti: documentation is sparse.
[14:43:14] bsilverberg has joined #selenium
[14:43:34] bsilverberg: sorry davehunt, lost my connection, but back now
[14:43:46] davehunt: hey bsilverberg
[14:44:25] bsilverberg: I don't imagine that changing the background colour using browser preferences would be reflected if we ask selenium what the bicolour is
[14:45:03] bsilverberg: oops, sorry folks, wrong room
[14:48:00] AutomatedTester: simonstewart: are you also looking at Eran's comments?
[14:48:27] simonstewart: Not yet
[14:48:52] AutomatedTester: simonstewart: ok coolk
[14:49:13] AutomatedTester: you know when you are so close yet so far on something
[14:49:44] simonstewart: Almost there
[14:49:50] simonstewart: And this is a lot less painful than I was expecting
[14:50:24] AutomatedTester: simonstewart: The Wife is on Holiday soon until October
[14:50:32] simonstewart: Nice
[14:50:44] AutomatedTester: I can come visit regularly to get this done quicker
[14:50:54] simonstewart: That'd be good
[14:51:20] Chuckleteeth: you guys both in the uk?
[14:51:24] simonstewart: yup
[14:51:44] simonstewart: Ugh
[14:51:47] AutomatedTester: a good chunk of the Selenium core team is european based
[14:51:50] simonstewart: Working in raw HTML is a PITA
[14:52:07] AutomatedTester: simonstewart: Microsoft word can help with that :P
[14:52:24] simonstewart: I just threw up a little on my keyboard
[14:52:39] AutomatedTester: Achievement unlocked
[14:52:39] simonstewart: My typing will now be accompanied by the sound of revulsion
[14:57:05] AutomatedTester: arggg I need an XBL expert
[IRC logfile - Started Wed Jul  4 15:01:38 2012]
[15:01:38] mreedell has joined #selenium
[15:08:12] rp2 has joined #selenium
[15:09:06] ccooper has joined #selenium
[15:11:07] kallisti: llaskin: do you know Perl?
[15:11:35] kallisti: I'm contemplating the design for yet another webdriver binding.
[15:11:37] dawagner: r16243 r16388
[15:11:39] selbot2: 03simon.m.stewart 3 months ago - SimonStewart: Fixing build issues | https://code.google.com/p/selenium/source/detail?r=16243 | http://seleniumhq.org/ci.jsp?r=16243
[15:11:42] selbot2: 03simon.m.stewart 3 months ago - SimonStewart: Remove RC dependency on code in the webdriver tree. | https://code.google.com/p/selenium/source/detail?r=16388 | http://seleniumhq.org/ci.jsp?r=16388
[15:11:45] dawagner: kallisti: There is already a perl binding or two, I believe
[15:11:49] kallisti: I know
[15:12:26] kallisti: I feel this one would bring something new to the table.
[15:12:36] dawagner: What would it bring?
[15:13:06] kallisti: mostly less code. also, how do the other bindings handle exceptions? perl has a little-known OO exception handling mechanism
[15:13:39] kallisti: so instead of using a class for the top-level webdriver commands you use functions and a dynamic variable, with some convenient higher-order functions.
[15:14:17] kallisti: with_new_section (host => '...', port => '...'), sub { open_page "http://google.com"; my $e = find_element(css => '.blah'); $e->click}
[15:14:17] AutomatedTester: :yt The Black Keys - Howlin for you
[15:14:19] selbot2: The Black Keys - Howlin' For You [Official Music Video] - http://www.youtube.com/watch?v=TLSpj7q6_mM&feature=youtube_gdata
[15:14:19] Chuckleteeth: simon you still here?
[15:14:27] kallisti: s/section/session/
[15:15:29] dawagner: r16388
[15:15:32] selbot2: 03simon.m.stewart 3 months ago - SimonStewart: Remove RC dependency on code in the webdriver tree. | https://code.google.com/p/selenium/source/detail?r=16388 | http://seleniumhq.org/ci.jsp?r=16388
[15:16:03] kallisti: so essentially the top-level commands become procedurally oriented (no repetitive driver. prefixes), while the elements, windows, frames, etc retain their OO interface. a mixture of the Haskell library design and the official library designs.
[15:17:41] llaskin: kallisti: i'm a ruby guy:)
[15:21:32] barancev: kallisti: http://search.cpan.org/~chocolate/Scope-With-0.01/lib/Scope/With.pm -- do you want to reimplement it?
[15:23:00] c089 has joined #selenium
[15:23:09] c089 has left #selenium
[15:23:12] c089 has joined #selenium
[15:23:41] danielwh has joined #selenium
[15:24:43] kallisti: barancev: not particularly, no. I'm not surprised it already exists. and it's not really the only thing I had in mind for a new library.
[15:25:05] barancev: check CPAN first :)
[15:26:48] kallisti: it depends on perl 5.16
[15:27:23] kallisti: which is very very new.
[15:28:03] barancev: 5.16 is rather old, I'd say
[15:28:19] kallisti: ???
[15:28:36] kallisti: it was released at the end of May.
[15:28:42] kallisti: this year.
[15:28:54] barancev: perl6 is new :)))))
[15:29:26] kallisti: I feel we have different definitions of what constitutes "new."  :|
[15:29:43] c089 has left #selenium
[15:30:10] barancev: where is a dependency on 5.16? I ses 'use 5.008001;' in the source of Scope::With
[15:31:19] kallisti: hm, nevermind. Misread the dependencies page.
[15:31:54] kallisti: I wasn't aware that you could use the block syntax at the end of subroutines.
[15:32:01] kallisti: without a sub keyword.
[15:32:24] kallisti: I know with function prototypes you can emulate the map/grep syntax.
[15:33:05] barancev: yes, you can use 'blocks', not only functions
[15:33:23] kallisti: er, well blocks are functions. ;)
[15:33:30] kallisti: it's just a syntax trick.
[15:33:52] barancev: sure
[15:34:42] barancev: perl is built around syntax tricks, it all consists of these tricks
[15:35:02] kallisti: right, but this is some special syntax magic. it's not documented in perldoc.
[15:35:21] kallisti: looks like Devel::Declare magic
[15:36:38] simonstewart: kallisti: it'd be better to chat to the existing perl bindings author. He's a nice chap, and open to new ideas
[15:36:59] simonstewart: Chuckleteeth: here
[15:37:02] simonstewart: 'sup?
[15:37:33] Chuckleteeth: So my understanding is that for quite time some we have had the thorn of IE not behaving well with native events for mouse correct?
[15:37:51] simonstewart: yes
[15:38:07] Chuckleteeth: and part of this thorn is the decision that the browser should not require focus for any test
[15:38:15] simonstewart: We've implemented a chunk of synthetic events for IE and hidden it behind a capability
[15:38:25] simonstewart: Chuckleteeth: that is, indeed, the reason
[15:38:26] jibay has joined #selenium
[15:38:49] Chuckleteeth: So, how much longer are we going to keep at this?
[15:38:54] Chuckleteeth: Well let me reword
[15:39:00] barancev: #4195 -- isn't it just implemented?
[15:39:00] simonstewart: "Indefinitely"
[15:39:01] selbot2: 03 open/new element.GetCssValue("color") returns different formats - https://code.google.com/p/selenium/issues/detail?id=4195 [Type-Defect Priority-Medium Status-Untriaged]
[15:39:13] simonstewart: barancev: that should be implemented now
[15:39:18] simonstewart: Though I don't think we handle the named colours
[15:39:21] simonstewart: yet
[15:39:27] Chuckleteeth: I much longer will we try to get it to work without requiring focus before we perhaps change that requirement for IE for the sake of making the mouse native events less flakey
[15:39:44] simonstewart: We'll never change that requirement
[15:39:55] simonstewart: Though we might provide an optional "requires focus" approach
[15:40:03] Chuckleteeth: Well it sort of already is
[15:40:12] Chuckleteeth: When i run my tests and i have to run IE
[15:40:15] simonstewart: One of the very original IE driver implementations required focus
[15:40:17] Chuckleteeth: i specifically can't do anything on my machine
[15:40:20] simonstewart: People hated it
[15:40:27] simonstewart: Chuckleteeth: I feel for you
[15:40:38] Chuckleteeth: so the fact we have this requirement...its not even fulfilled right now
[15:40:45] Chuckleteeth: and yet we also get flakey mouse native events
[15:40:48] simonstewart: It's fulfilled almost all the time
[15:40:52] simonstewart: The click think is a PITA
[15:41:00] Chuckleteeth: it is? Click is used in every single one of my tests
[15:41:11] Chuckleteeth: if i try to do anything on my machine i risk the click failing
[15:41:21] Chuckleteeth: so its not even really an option for me
[15:41:37] barancev: kallisti: what did you mean by emulating map syntax with func prototypes?
[15:41:38] simonstewart: What about using more than IE instance at the same time?
[15:41:47] simonstewart: Or Firefox and IE and chrome at the same time>
[15:41:51] simonstewart: That use case is supported
[15:42:07] simonstewart: So even your example demands that IE works without focus
[15:42:12] kallisti: barancev: sub mymap(&@) { ... }   mymap {2 + 2} 1..5
[15:42:22] simonstewart: (unless you're one of the lucky few who can dedicate an entire machine per browser)
[15:42:33] simonstewart: (if you want to be one of those lucky few, Google are hiring)
[15:42:34] kallisti: if a & is the first argument in the prototype, then you can omit the sub keyword and comma
[15:42:35] Chuckleteeth: I typically dont run parallel tests on my own machine, i save that for my grid but i see what you are saying
[15:42:36] simonstewart: (etc)
[15:42:39] kallisti: thus making it look like map and grep.
[15:43:07] kallisti: but you can't do that with code refs at the end of the argument list.
[15:43:17] Chuckleteeth: lucky few? I didn't realize having some machines to do this was so rare
[15:43:30] Chuckleteeth: I felt my setup was pathetic compared to other users coming in here with a 100+ nodes on the grid
[15:43:31] kallisti: Devel::Declare uses parser hooks that allow you to locally redefine syntax.
[15:43:36] simonstewart: Imagine never running out of cores :)
[15:43:38] kallisti: which is what the with statement uses.
[15:43:50] simonstewart: Chuckleteeth: it seems to be pretty unusual
[15:44:04] simonstewart: Most people seem to suffer through running the tests on their dev workstations
[15:44:23] Chuckleteeth: : /
[15:44:27] barancev: kallisti: there are built-in map and grep functions inperl
[15:44:34] kallisti: correct.
[15:44:35] kallisti: (???)
[15:44:36] AutomatedTester: Moz doesnt have 100 nodes
[15:45:00] kallisti: barancev: I'm not sure what you're getting at.
[15:45:06] Chuckleteeth: well i really want to fix this... but i fear I could invest many hours and not even come close. I mean jim evans has worked on it for quite a while and he didn't find a solution. What hope do i have?
[15:45:09] simonstewart: We experimented with running chunks of the CI build on the compute engine
[15:45:10] kallisti: the fact they exist has nothing to do with what I was saying.
[15:45:32] Chuckleteeth: how many does mozilla have?
[15:45:40] kallisti: in fact I even mentioned that they exist, but referring to them.  "you can emulate the map/grep syntax"
[15:46:03] barancev: ah, I see
[15:46:03] kallisti: s/but/by/
[15:47:11] barancev: 2.25 soon?
[15:47:36] simonstewart: We could do the release any time
[15:47:45] simonstewart: (lemme check the builds)
[15:47:49] barancev: :ci
[15:47:50] selbot2: Jenkins: http://sci.illicitonion.com:8080/ | Dashboard: http://goo.gl/ydhTP
[15:47:55] simonstewart: Yeah, we're in good shape
[15:48:00] simonstewart: Anyone want the build bacon?
[15:48:06] simonstewart: release bacon
[15:48:08] simonstewart: even
[15:48:13] Chuckleteeth: bacon...mmm
[15:48:29] barancev: ff 3.6 javascript tests broken by jleyba
[15:48:42] dawagner: Looks like jason broke ie9
[15:49:12] simonstewart: Roll back?
[15:49:46] barancev: r17308
[15:49:48] selbot2: 03jmleyba@gmail.com 1 day ago - JasonLeyba: Instead of recording the entire application task history, record only the recently executed tasks. Each task will be recorded using its description along with a stack trace for where it was scheduled. This should make it a lot easier to locate failing commands. | https://code.google.com/p/selenium/source/detail?r=17308 | http://seleniumhq.org/ci.jsp?r=17308
[15:50:10] simonstewart: uh....
[15:50:14] simonstewart: how did that break the build?
[15:51:18] barancev: don't know, but after this commit ff3.6 javascript tests fail
[15:51:32] dawagner: consistently, he's trying to call string.push
[15:51:40] dawagner: I think
[15:52:31] simonstewart: Well, that won't work
[15:55:15] barancev: IE9 javascript tests seems to be broken for the same reason
[15:55:22] simonstewart: Down to 53 validation errors
[15:55:28] dawagner: For the same reason as I mentioned above :)
[15:55:34] naeg has joined #selenium
[15:55:43] dawagner: validation errors? What are you working on??
[15:56:23] simonstewart: The TR.html
[15:56:31] simonstewart: The first public working draft
[15:56:36] dawagner: Ooh :)
[15:56:38] barancev: but IE6 tests broken differently, and for ages
[15:56:38] simonstewart: Apparently specs need to be valid
[IRC logfile - Started Wed Jul  4 16:05:13 2012]
[16:05:13] simonstewart: 28 validation errors
[16:10:26] AutomatedTester: simonstewart: done what I needed 
[16:10:29] AutomatedTester: whats left for me to do
[16:10:48] simonstewart: Let me save and push
[16:11:33] simonstewart: 2 more errors to fix
[16:11:38] simonstewart: Let me fix 'em
[16:14:46] AutomatedTester: simonstewart: btw I have marionette hit the Mozilla marketplace, sign in via browser id and then install a web app
[16:14:57] simonstewart: Video or it didn't happen :)
[16:15:04] AutomatedTester: arggg
[16:15:24] AutomatedTester: I will do it later
[16:16:12] davehunt_ has joined #selenium
[16:16:32] stephend has joined #selenium
[16:17:45] mdirkse has joined #selenium
[16:18:41] simonstewart: OK 
[16:18:47] simonstewart: Just pushed the valid doc
[16:19:28] kallisti: the official libraries are thread-safe, right?
[16:20:37] simonstewart: No
[16:20:40] simonstewart: The exact opposite
[16:20:56] simonstewart: We make no promises whatsoever about thread safety
[16:21:01] simonstewart: at least on the client side
[16:21:15] simonstewart: AutomatedTester: have a read of the spec and let me know if there's stuff that's missing.
[16:21:33] AutomatedTester: okey dokey
[16:21:35] nhirata has joined #selenium
[16:29:15] kallisti: simonstewart: well, I don't mean "perfect" thread-safety. something more like... if 2 threads send requests simultaneously will they be completed in sequence or will strange things happen.
[16:29:38] kallisti: obviously the state of the system after one request could invalidate another.
[16:29:43] AutomatedTester: kallisti: strange things will happen
[16:30:24] kallisti: ah
[16:30:28] AutomatedTester: kallisti: in the new version of FirefoxDriver it will get very upset
[16:30:34] kallisti: I'll have to fix that client-side then.
[16:30:45] kallisti: lock the session while it waits for a request.
[16:32:44] kallisti: Haskell programs tend to be concurrent, so thread-safety is pretty essential.  
[16:33:19] kallisti: at least to the degree that you can make simultaneously requests, though you may not end up with a consistent state as a result.
[16:33:25] kallisti: -ly
[16:34:33] simonstewart: so, bacon anyone?
[16:34:51] kallisti: sure. I'll send my email in a PM.
[16:34:55] kallisti: you can attach it.
[16:38:17] kallisti: I was also thinking it might be possible to catch stale elements at compile-time, at least in a single-threaded program.
[16:38:40] dawagner: "If we see this, then we know that the test has failed" - useful message
[16:38:43] klrmn has joined #selenium
[16:38:55] simonstewart: Sounds like something I'd write
[16:39:48] kallisti: hm, no nevermind. can't catch those. I forgot that things like click() can cause stale elements.
[16:39:58] dawagner: Or even timers in the javascript
[16:40:11] kallisti: if it were just open_page then I could catch that pretty easily.
[16:50:43] dawagner: kallisti: There may be more subtlety than you think; if you driver.get("foo") then driver.get("foo#bar") what happens? (Actually, what *does* happen? I presume we re-load the page?)
[16:51:27] kallisti: hm, right.
[16:52:26] kallisti: basically, even if it were the case that open_page were the only cause of staleness, the URL can't statically determine if an element is stale
[16:52:39] simonstewart: dawagner: we don't reload the page
[16:52:44] simonstewart: We check for that
[16:53:28] simonstewart: http://code.google.com/p/selenium/source/browse/trunk/javascript/firefox-driver/js/firefoxDriver.js#168
[16:53:52] AutomatedTester: simonstewart: any updates I do need to go to both webdriver-spec and tr (stupid question but want the right one locked in)
[16:54:08] simonstewart: Yes
[16:54:13] AutomatedTester: coolio
[16:54:28] simonstewart: You generate webdriver-spec.html using "cat *_*.html > webdriver-spec.html"
[16:54:52] simonstewart: And then TR.html by opening the webdriver-spec.html in a browser, letting it render and then saving the page
[16:55:14] AutomatedTester: ahhh
[16:55:23] AutomatedTester: silly me :)
[16:55:52] simonstewart: Because it _should_ be the rendered result
[16:56:04] dawagner: Damn we're good.
[16:56:12] simonstewart: Any particular reason?
[16:56:19] simonstewart: I mean, yes. Yes, we are good
[16:56:42] AutomatedTester: why this time, i forget all the other reasons... 
[16:56:45] AutomatedTester: :P
[16:57:37] dawagner: Because [16:55]  <simonstewart> dawagner: we don't reload the page
[16:58:02] simonstewart: Ah
[IRC logfile - Started Wed Jul  4 17:00:31 2012]
[17:00:31] AutomatedTester: simonstewart: fixed one thing, the boy is home so will do the rest later
[17:00:45] simonstewart: Thanks
[17:06:33] dawagner: :tr Tracy Chapman telling stories
[17:06:39] dawagner: :yt Tracy Chapman telling stories
[17:06:40] dawagner: even
[17:06:40] selbot2: Tracy Chapman - Telling Stories - http://www.youtube.com/watch?v=wapCTd5fS2Y&feature=youtube_gdata
[17:30:23] teodosia has left #selenium
[17:33:13] kallisti: does this not work to select the ancestor of an element in xpath?  /parent[/path/to/ancestor]  ?
[17:33:25] kallisti: er
[17:33:30] kallisti: path to descendent
[17:37:08] kallisti: oh perhaps it should be a relative path
[17:48:53] dawagner: kallisti: Urm... What are you trying to get?
[17:49:17] kallisti: a parent with a given child.
[17:49:26] kallisti: or well, ancester with a given descendent.
[17:49:34] kallisti: I believe I've got the correct xpath now.
[17:56:02] kallisti: dawagner: sometimes the only distinguishing feature of a table is that it has a particular header class beneath it, or similar.
[IRC logfile - Started Wed Jul  4 18:00:39 2012]
[18:00:39] dawagner: aha, fun fun
[18:02:04] kallisti: //ancestor[path/to/descendent] is a bit cleaner than my previous //ancestor/path/to/descendent/../../..
[18:09:35] nealstewart has joined #selenium
[18:10:18] jeichar has joined #selenium
[18:19:38] jeichar has joined #selenium
[18:33:47] testingb0t has joined #selenium
[IRC logfile - Started Wed Jul  4 19:12:21 2012]
[19:12:21] jeichar has joined #selenium
[19:32:05] kskkoontz has joined #selenium
[19:37:33] kallisti: so
[19:37:43] kallisti: InvalidSelectorException points to http://seleniumhq.org/exceptions/invalid_selector_exception.html
[19:37:47] kallisti: which is a 404
[19:37:48] santiycr has joined #selenium
[19:39:54] simonstewart: Hmph!
[19:39:58] simonstewart: We should write that page
[19:40:07] simonstewart: (first complaint about it though)
[19:40:14] AutomatedTester: back... from outer space
[19:40:14] simonstewart: (gratz on reading the exception)
[19:40:26] kallisti: thanks. I try.
[19:40:41] kallisti: "Invalid xpath expression" isn't very helpful.
[19:40:49] AutomatedTester: :yt gloria gaynor - i will survive
[19:40:50] selbot2: I Will Survive - http://www.youtube.com/watch?v=ZBR2G-iI3-I&feature=youtube_gdata
[19:40:52] kallisti: I figured I could waste less time by actually reading what the error code means.
[19:41:06] simonstewart: It is, however, pretty much what we get from the xpath engine
[19:41:24] simonstewart: That page would describe common causes of the exception
[19:41:30] simonstewart: And mitigation strategies
[19:43:03] kallisti: the error messages do seem a bit improved in 2.24
[19:43:11] kallisti: I get fewer "server errors"
[19:44:03] simonstewart: We're working on it
[19:45:38] kallisti: oh 51 just means "invalid expression error"
[19:45:39] kallisti: okay..
[19:45:46] kallisti: thanks xpath.
[19:45:55] simonstewart: :)
[19:46:00] simonstewart: What's the expression?
[19:47:30] kallisti: //span[contains(text(), 'Statement')]/following-sibling::span
[19:48:55] kallisti: er nevermind, wrong expression
[19:48:59] simonstewart: Ha
[19:49:05] kallisti: and the issue is with string escapes.
[19:49:15] kallisti: specifically the lack of quote escapes in xpath, apparently.
[19:49:52] simonstewart: Then it sounds like you need to escape your quotes, no?
[19:50:24] simonstewart: :seen krosenvold
[19:50:24] selbot2: krosenvold was last seen 3 days ago, joining.
[19:50:30] simonstewart: krosenvold: yt?
[19:50:51] kallisti: xpath actually doesn't support escaping quotes at all, you have to use concat.
[19:50:59] kallisti: incredible.
[19:51:23] simonstewart: This feels like something we already have code to handle
[19:51:25] chainey has joined #selenium
[19:51:45] chainey has left #selenium
[19:52:18] dmachi has joined #selenium
[19:52:58] kallisti: simonstewart: you parse the xpath for strings, and insert concats in place of backslashed quotes?
[19:53:08] simonstewart: yeah
[19:53:40] kallisti: I'm using single quotes
[19:53:55] kallisti: the string is inserted as a function parameter, at the moment.
[19:53:56] Dude-X_: if it's there then i did not see it kick in last week
[19:54:06] dmachi2 has joined #selenium
[19:54:15] simonstewart: http://code.google.com/p/selenium/source/browse/trunk/java/client/src/org/openqa/selenium/support/ui/Select.java#289
[19:54:43] kallisti: ah I'm using single quotes.
[19:54:50] kallisti: this escapes double quotes.
[19:54:58] kallisti: so... I guess I'll use double quotes. :P
[19:55:57] Dude-X_: simonstewart, ah neat; does this work only for xpaths?
[19:55:58] Chuckleteeth: suppose i have a div that has text in it
[19:56:04] Swadq has joined #selenium
[19:56:09] Chuckleteeth: then it may or may not have other elements after the text that also have text
[19:56:10] simonstewart: That's what it was written for
[19:56:15] Chuckleteeth: is it possible to retreive only the root text?
[19:56:48] Dude-X_: too bad it's a protected function; I'll have to copy and paste it
[19:58:14] kallisti: oh this is client code
[19:59:52] *kallisti will drop this into his Haskell code for next release.
[IRC logfile - Started Wed Jul  4 20:00:18 2012]
[20:00:18] Dude-X_: kallisti, do you have people who have expressed interest in using it?
[20:00:26] kallisti: yes: myself
[20:02:53] kallisti: as far as I know, no one actually uses my library. I got an email from a self-described "Haskell newbie" asking me some questions about the library, I explained some stuff, and never got a reply.
[20:04:23] Dude-X_: ha
[20:04:38] *kallisti will need to provide some example programs, perhaps.
[20:04:58] Dude-X_: need to figure out a way to organize tests
[20:05:03] Dude-X_: at least we have the page object model
[20:05:10] Dude-X_: for OO languages
[20:05:25] kallisti: who me?
[20:06:03] *kallisti is unfamiliar with these page object models.
[20:06:52] jarib has joined #selenium
[20:09:05] kallisti: functions are a pretty good unit of abstraction.
[20:10:34] Dude-X_: the idea is this: you write tests that look like this . loginPage.login("user", "password"); homePage.clickInbox(); inboxPage.clickGetNewMessages(); inboxPage.getHeaderTextAt(0);
[20:10:53] Dude-X_: each page object will have all the calls to the web driver client to find the elements, and click on them and so on
[20:12:27] kallisti: you could emulate that, but I don't see a reason to.
[20:12:43] kallisti: by examples, I mostly meant things like "how to open a page, test some elements, and close"
[20:12:51] kallisti: just to showcase the important bits.
[20:13:09] kallisti: which can get buried in reference documentation
[20:14:08] Dude-X_: that would help too
[20:14:09] Dude-X_: heh
[20:14:46] dmachi has joined #selenium
[20:15:43] kallisti: Dude-X_: you could accomplish that with records and functions, basically.
[20:16:03] Chuckleteeth: holy sweet bejesus
[20:16:04] kallisti: so that each structure represents a particular state.
[20:16:12] simonstewart: Chuckleteeth: ?
[20:16:16] Chuckleteeth: IEDriverServer crashed hard
[20:16:57] Dude-X_: for me a hard crash is when it eats up your hard drive space, or it locks up the machine
[20:17:35] Swadq has joined #selenium
[20:19:09] kallisti: Dude-X_: Haskell programmers tend to shy away from anything that resembles OO. Not for any particularly good reason either.
[20:19:33] Dude-X_: do haskell programmers write tests?
[20:19:34] kallisti: you can emulate some OO concepts in haskell pretty easily. inheritance is the main thing that doesn't translate directly.
[20:19:42] kallisti: Dude-X_: some do. large projects have some tests.
[20:19:55] kallisti: nowhere near as comprehensive as a large Python project though
[20:20:19] simonstewart: I keep meaning to get closer to some of the OO/Functional languages out there
[20:20:24] simonstewart: Clojure looks worth a try
[20:20:52] Chuckleteeth: hmm, this crash is predictable
[20:21:03] Chuckleteeth: think we may have a bug-e-poo
[20:21:13] kallisti: Dude-X_: most web apps do server-side testing at the moment.
[20:22:13] kallisti: Dude-X_: libraries that consist mostly of Haskell and little other outside interaction require very little testing.
[20:23:21] kallisti: similarly, a large IO-heavy project's will focus on input/output boundaries with other interfaces.
[20:24:53] kallisti: tl;dr testing is still important, but not as utterly vital.
[20:26:41] kallisti: http://book.realworldhaskell.org/read/testing-and-quality-assurance.html
[20:31:03] Chuckleteeth: maybe this is invalid css
[20:32:21] Dude-X_: shouldn't' crash the server
[20:32:34] Chuckleteeth: no it should not
[20:32:53] Chuckleteeth: im gonna try and replicate simpler circumstances
[20:33:02] *AutomatedTester wonders why simonstewart hasnt gone home for cuddles
[20:33:04] simonstewart: That'd be really good
[20:33:12] simonstewart: Long story
[20:33:17] AutomatedTester: :(
[20:33:18] simonstewart: But I _am_ missing cuddles tonight
[20:33:27] Chuckleteeth: is there an easy way to just feed raw html into the driver
[20:33:27] kallisti: Dude-X_: is there any kind of library in Python that resembles quickcheck?
[20:33:32] Chuckleteeth: instead of having to make a static page?
[20:33:51] simonstewart: Not particularly happy about it
[20:33:53] simonstewart: *sigh*
[20:34:09] kallisti: Dude-X_: here's an example in ghci hpaste.org/70903
[20:34:28] kallisti: Chuckleteeth: couldn't you just save to a temp file and use file:// URL?
[20:34:50] Chuckleteeth: id get in trouble leaking out this page
[20:34:58] Chuckleteeth: id have to gut the crap out of it
[20:35:07] Chuckleteeth: its got bank stuffs 
[20:35:17] simonstewart: That's what I'm doing right now with a Google page
[20:35:42] simonstewart: I've narrowed down a single failing test
[20:35:48] simonstewart: Now all I need to do is anonymize it
[20:36:08] AutomatedTester: s/simonstewart/anonymous/g
[20:36:09] AutomatedTester: done
[20:36:50] AutomatedTester: ahhh layout looks much better
[20:38:08] awilson820 has joined #selenium
[20:42:41] Dude-X_: kallisti, i think doctest is similar
[20:42:46] Dude-X_: if i understand it right
[20:44:10] dmachi1 has joined #selenium
[20:44:11] kallisti: basically you can pass it a predicate function (and some optional test settings) and it will automatically generate test cases for it.
[20:44:50] kallisti: seems like something that relies on static typing.
[20:44:57] kallisti: not sure how you would do that with dynamic types.
[20:46:39] kallisti: I guess you could manually specify the expected types, using some other class, and then that data would be used to generate test cases.
[20:47:25] kallisti: oh doctest. it probably uses documentation types.
[20:47:41] kallisti: I forgot Python documentation does that.
[20:52:47] simonstewart: Gosh, I do love placekitten.com
[20:52:58] dawagner has joined #selenium
[20:56:59] kallisti: simonstewart: I've yet to check out Closure.
[20:57:06] kallisti: Scala is another one
[20:59:06] *kallisti is probably sipping too much pure FP kool-aid to enjoy it.
[IRC logfile - Started Wed Jul  4 21:00:00 2012]
[21:00:00] simonstewart: I can see why we don't get many reduced test cases
[21:00:31] *kallisti is not sure what a reduced test case is.
[21:00:34] kallisti: a... smaller test case?
[21:01:00] simonstewart: People tend to have massive test cases, and at some point, it tickles a selenium bug
[21:01:16] simonstewart: Rather than giving us the massive test case, what we need is the smallest chunk of code that demonstrates the problem
[21:01:30] *kallisti might play around with Selenium so that he can use QuickCheck to run tests.
[21:02:34] kallisti: for example, I was thinking it should be possible to create an "ArbitraryXpath" type that QuickCheck uses to generate random (yet valid) xpath strings for a given HTML doc.
[21:03:24] simonstewart: Almost there....
[21:03:33] simonstewart: One page of html left
[21:04:04] kallisti: simonstewart: what do the tests you're currently working with do?
[21:04:21] simonstewart: I'm extracting a case from a product here at google
[21:05:58] kallisti: ah okay.
[21:10:09] Jordan_ has joined #selenium
[21:13:28] stackedsax has joined #selenium
[21:21:52] simonstewart: right.
[21:21:57] simonstewart: On that bomb shell, I'm done
[21:22:09] simonstewart: kallisti: that's a reduced test case that's just gone in
[21:22:15] simonstewart: r17321
[21:22:17] selbot2: 03simon.m.stewart half a minute ago - SimonStewart: Identified a bug to do with the overflow property. Checking in to demonstrate what a reduced test case might look like. this has been extracted from a private project at work, but anonymized and reduced to demonstrate the issue. | https://code.google.com/p/selenium/source/detail?r=17321 | http://seleniumhq.org/ci.jsp?r=17321
[21:22:21] selbot2: 03simon.m.stewart half a minute ago - SimonStewart: Identified a bug to do with the overflow property. Checking in to demonstrate what a reduced test case might look like. this has been extracted from a private project at work, but anonymized and reduced to demonstrate the issue. | https://code.google.com/p/selenium/source/detail?r=17321 | http://seleniumhq.org/ci.jsp?r=17321
[21:25:35] Dude-X_: nice he found that
[21:25:48] Dude-X_: now wait for the fix...
[21:35:00] SamuraiJack has joined #selenium
[21:40:49] ccooper has joined #selenium
[21:41:20] AutomatedTester: laters
[21:42:30] Chuckleteeth: i cant get this thing to crash on a static page
[21:44:37] kallisti: has anyone noticed idle selenium eating up a lot of CPU time?
[21:51:09] Swadq has joined #selenium
[21:56:31] dawagner: kallisti: Do you mean an idle browser? Or the java process?
[21:57:15] eranm: night all
[IRC logfile - Started Wed Jul  4 22:04:20 2012]
[22:04:20] Dude-X_: :apidocs
[22:04:21] selbot2: .NET: http://goo.gl/Fm3cw | Java: http://goo.gl/kKQqM | Ruby: http://goo.gl/cFyyT | Python: http://goo.gl/5yWoR
[22:08:03] ccooper has joined #selenium
[22:12:43] Swadq has joined #selenium
[22:13:50] rbalent has joined #selenium
[22:18:51] testingb0t1 has joined #selenium
[22:29:55] stackedsax has joined #selenium
[22:35:16] chainey1 has joined #selenium
[22:54:30] ZedPepsi has joined #selenium
[22:55:49] ZedPepsi: Guys, I have a problem. I have a test suite that I run in Chrome/Firefox/IE. In Chrome/Firefox, the local storage is empty on startup, but in IE the local storage is dirty on startup. How do I clear it? (I use python.)
[IRC logfile - Started Wed Jul  4 23:03:44 2012]
[23:03:44] kallisti: there should be a method to retrieve all keys
[23:03:55] kallisti: call that, loop through the keys and set them all to an empty string.
[23:04:07] kallisti: web storage makes no distinction between "undefined" and "is empty string"
[23:04:33] ZedPepsi: uhm
[23:04:43] ZedPepsi: and what about this? http://selenium.googlecode.com/svn/trunk/docs/api/rb/Selenium/WebDriver/HTML5/LocalStorage.html
[23:04:49] ZedPepsi: is this in python too?
[23:04:56] ZedPepsi: oh i see this in trunk
[23:05:22] kallisti: no clue
[23:05:44] ZedPepsi: why is it different in IE vs Firefox/Chrome though?
[23:05:48] kallisti: no clue
[23:05:55] ZedPepsi: this sucks hard
[23:05:56] *kallisti maintains a third party Haskell library.
[23:06:03] kallisti: ZedPepsi: why do you need web storage to be empty at startup?
[23:06:23] ZedPepsi: i have a web app that stores the state of the web page last time it was visited
[23:06:40] ZedPepsi: for testing purposes it should be a "first visit"
[23:06:47] kallisti: ah, well.
[23:07:05] kallisti: not sure how the IE driver works, but the Firefox driver uses a new profile on each session invocation.
[23:07:07] ZedPepsi: so essentially i am getting an unclean IE environment
[23:07:14] kallisti: so in Firefox you end up with a clean environment.
[23:07:19] kallisti: IE may not work this way.
[23:07:21] ZedPepsi: right
[23:07:45] kallisti: it should be sufficient to just use the web storage interface to clear the keys. I would hope that it's implemented in Python somewhere.
[23:08:16] ZedPepsi: what's the web storage interface?
[23:08:22] kallisti: local storage / session storage
[23:08:26] kallisti: is "web storage"
[23:08:39] kallisti: each binding can have a different interface to that, but I imagine most are pretty similar.
[23:08:54] kallisti: ah yes, I forgot. there's actually a "delete all keys" function
[23:09:07] kallisti: again, don't know what's called in Python.
[23:09:17] ZedPepsi: what's this "delete all keys"?
[23:09:22] ZedPepsi: actually
[23:09:25] ZedPepsi: this might not help
[23:09:31] kallisti: I'm referring to commands defined in the wire protocol
[23:09:37] kallisti: which is the client-server interface selenium uses
[23:09:37] ZedPepsi: because the local storage has to be cleared before the page load
[23:09:43] kallisti: to implement a language binding you implement this protocol
[23:09:58] kallisti: ZedPepsi: hm? you can do that no problem
[23:10:05] kallisti: start the session, clear the keys, open the page.
[23:10:15] ZedPepsi: ok
[23:10:30] ZedPepsi: well i still have to have the information on how to clear the keys -- not sure how to do that?
[23:10:48] kallisti: allow me to search the docs for you.
[23:10:57] kallisti: :docs
[23:11:01] kallisti: :api
[23:11:03] kallisti: >_>
[23:11:11] ZedPepsi: oh sorry buddy
[23:14:02] kallisti: I'm actually not finding anything.
[23:15:14] *kallisti wacks Dude-X_ on the head.
[23:15:20] kallisti: why no web storage API in Python?
[23:25:55] kallisti: ZedPepsi: er... well
[23:26:00] kallisti: you could use the Ruby bindings.
[23:26:04] kallisti: (or I guess the Haskell ones... :P)
[23:26:58] ZedPepsi: kallisti: i just searched as well
[23:27:12] ZedPepsi: i also did this: >>> dir(driver) 
[23:27:18] ZedPepsi: that did not print anything promising
[23:28:12] ZedPepsi: perhaps an alternate method: is there a way to delete local storage in IE from a bat file?
[23:28:29] kallisti: you're asking the wrong fellow.
[23:28:37] *kallisti avoids Windows like the plague.
[23:29:11] kallisti: import Test.WebDriver; main = runSession defaultSession defaultCaps $ do { deleteAllKeys LocalStorage; openPage "http://mywebsite.com"; doStuff }
[23:29:14] kallisti: tada!
[23:29:17] kallisti: in Haskell.
[23:29:52] kallisti: ZedPepsi: I'm guessing you're restricted to python, for whatever reason?
[23:30:13] ZedPepsi: oh hum now i restarted my script after tweaking my IE prefs and the local storage has disappeared
[23:30:21] ZedPepsi: maybe it was a heisenbug?
[23:30:37] ZedPepsi: well i have a code base in python now
[23:30:47] ZedPepsi: so i'm not gonna rewrite for no reason
[23:30:54] ZedPepsi: also it has to run in mac and IE
[23:31:02] ZedPepsi: i mean mac and windows
[23:31:06] kallisti: I've always found the "I use X language now I must always use X language" argument kind of weird.
[23:31:16] kallisti: no one mentioned rewriting your existing code.
[23:31:25] ZedPepsi: i did!
[23:31:27] ZedPepsi: i mentioned it!
[23:31:27] ZedPepsi: haha
[23:31:30] kallisti: lol. true.
[23:32:13] kallisti: if the official libs give you any proper access to their internals, it would even be possible to send a session ID across processes, and resume a webdriver session in a different language.
[23:32:18] kallisti: assuming you're using standalone server.
[23:33:02] ZedPepsi: i have testing software written in python that i don't care to rewrite
[23:33:18] ZedPepsi: it parses source files looking for test cases
[23:33:21] ZedPepsi: and so on
[23:34:06] kallisti: well, feel free to send a patch adding session storage capabilities
[23:34:12] kallisti: it's probably a few hours worth of work.
[23:34:25] kallisti: took me about 45 minutes to do.
[23:34:47] ZedPepsi: yes ill consider it
[23:35:28] kallisti: though the official libs are a bit fatter than the code I was working with.
[23:36:34] ZedPepsi: btw does selenium have stuff for iphones and androids?
[23:36:39] kallisti: yep.
[23:36:45] ZedPepsi: how painful is it
[23:36:50] kallisti: no clue.
[23:37:07] *kallisti helpful
[23:37:15] ZedPepsi: yeah that's probably not a good sign :)
[23:37:34] kallisti: it works just like any other browser choice, except that there's also touch gresture commands.
[23:37:57] kallisti: I basically implement the wire protocol directly in a statically typed manner. the other libs use an OO interface that I'm not familiar with.
[23:38:12] kallisti: it's probably similar but instead of someFunction you write  someObject.someMethod
[23:38:19] ZedPepsi: well right now i a python program on my mac; it starts a webdriver for chrome or firefox. i have no idea how to run a python program on my iphone.
[23:38:31] detronizator has joined #selenium
[23:38:48] ZedPepsi: if that indicates what a noob i am
[23:39:01] kallisti: not sure if it's possible.
[23:39:11] ZedPepsi: i don't think i tis
[23:39:19] ZedPepsi: so i don't know how to run my stuff on a wire
[23:39:23] kallisti: mobile device development is a foggy place for me.
[23:39:57] kallisti: https://code.google.com/p/selenium/wiki/JsonWireProtocol
[23:40:08] kallisti: here's a specification of the wire protocol if you want to try your hand at hacking the selenium libraries.
[23:40:13] kallisti: sounds like fun to me.
[23:40:40] ZedPepsi: uh not sure i have the time to do that :)
[23:40:44] kallisti: http://hackage.haskell.org/packages/archive/webdriver/0.3.1/doc/html/src/Test-WebDriver-Commands.html#WebStorageType   not sure if you can read this, but here's my implementation of the web storage commands. it reads to me like a specification of the wire protocol to me, but I don't know what it looks like to you.
[23:40:51] kallisti: -to me
[23:41:50] kallisti: doCommand GET "/some/url" someThingThatTranslatesToJSON
[23:42:05] kallisti: is a HTTP GET request at that URL, sending along some JSON.
[23:42:08] kallisti: that's basically how the protcol works.
[23:42:25] kallisti: HTTP with JSON requests and responses.
[23:43:17] ZedPepsi: if it's all json
[23:43:36] ZedPepsi: shouldn't there be like a javascript driver or something
[23:43:44] kallisti: I'm positive the python library already has functions for translating to/from JSON that you would want to use.
[23:43:53] kallisti: ZedPepsi: yes. it's called...javascript.
[23:44:03] ZedPepsi: no i mean
[23:44:26] ZedPepsi: is webdriver available eg in node?
[23:44:28] ZedPepsi: or something
[23:44:36] ZedPepsi: whatever standalone javascript is out there
[23:44:56] kallisti: the servers contain quite a lot of javascript code, but I don't think there's a javascript client
[23:45:00] kallisti: why would you want a javascript client?
[23:45:13] kallisti: JQuery is probably a sufficient alternative.
[23:45:59] kallisti: https://code.google.com/p/selenium/wiki/WebDriverJs
[23:46:01] ZedPepsi: this is a javascript project and right now it has a kludge of php, python, bash and duct tape holding it together
[23:46:02] kallisti: but here they are. :P
[23:47:48] ccooper has joined #selenium
[23:47:49] ZedPepsi: ok that's good
[23:48:03] ZedPepsi: not sure i really want to make the jump yet
[23:48:09] ZedPepsi: but it's a start
[23:51:55] ZedPepsi: so apparently i have to reboot
